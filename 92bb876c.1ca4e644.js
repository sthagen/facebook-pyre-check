(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(7),o=(n(0),n(95)),c={id:"getting-started",title:"Getting Started",sidebar_label:"Getting Started"},i={unversionedId:"getting-started",id:"getting-started",isDocsHomePage:!1,title:"Getting Started",description:"Welcome to the wonderful world of static typing! This guide will get you from zero to a simple project that is type checked with Pyre.",source:"@site/docs/getting_started.md",slug:"/getting-started",permalink:"/docs/getting-started",editUrl:"https://github.com/facebook/pyre-check/tree/master/documentation/website/docs/getting_started.md",version:"current",sidebar_label:"Getting Started",sidebar:"pyre",next:{title:"Installation",permalink:"/docs/installation"}},p=[{value:"Requirements",id:"requirements",children:[]},{value:"Setting up a Project",id:"setting-up-a-project",children:[]},{value:"Running Pyre",id:"running-pyre",children:[]}],l={rightToc:p};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Welcome to the wonderful world of static typing! This guide will get you from zero to a simple project that is type checked with Pyre."),Object(o.b)("h2",{id:"requirements"},"Requirements"),Object(o.b)("p",null,"To get started, you need ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://www.python.org/getit/"}),"Python 3.6 or later")," and ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://facebook.github.io/watchman/"}),"watchman")," working on your system. On ",Object(o.b)("em",{parentName:"p"},"MacOS")," you can get everything with ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://brew.sh/"}),"homebrew"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ brew install python3 watchman\n")),Object(o.b)("p",null,"On ",Object(o.b)("em",{parentName:"p"},"Ubuntu"),", ",Object(o.b)("em",{parentName:"p"},"Mint"),", or ",Object(o.b)("em",{parentName:"p"},"Debian"),"; use ",Object(o.b)("inlineCode",{parentName:"p"},"apt-get"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ sudo apt-get install python3 python3-pip watchman\n")),Object(o.b)("p",null,"We tested Pyre on ",Object(o.b)("em",{parentName:"p"},"Ubuntu 16.04 LTS"),", ",Object(o.b)("em",{parentName:"p"},"CentOS 7"),", as well as ",Object(o.b)("em",{parentName:"p"},"OSX 10.11")," and later."),Object(o.b)("h2",{id:"setting-up-a-project"},"Setting up a Project"),Object(o.b)("p",null,"We start by creating an empty project directory and setting up a virtual environment:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"$ mkdir my_project && cd my_project\n$ python3 -m venv ~/.venvs/venv\n$ source ~/.venvs/venv/bin/activate\n(venv) $ pip install pyre-check\n")),Object(o.b)("p",null,"Next, we teach Pyre about our new project:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"(venv) $ pyre init\n")),Object(o.b)("p",null,"This command will set up a configuration for Pyre (",Object(o.b)("inlineCode",{parentName:"p"},".pyre_configuration"),") as well as watchman (",Object(o.b)("inlineCode",{parentName:"p"},".watchmanconfig"),") in your project's directory. Accept the defaults for now \u2013 you can change them later if necessary."),Object(o.b)("h2",{id:"running-pyre"},"Running Pyre"),Object(o.b)("p",null,"We are now ready to run Pyre:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"(venv) $ echo \"i: int = 'string'\" > test.py\n(venv) $ pyre\n \u019b Found 1 type error!\ntest.py:1:0 Incompatible variable type [9]: i is declared to have type `int` but is used as type `str`.\n")),Object(o.b)("p",null,"This first invocation will start a daemon listening for filesystem changes \u2013\xa0type checking your project incrementally as you make edits to the code. You will notice that subsequent invocations of ",Object(o.b)("inlineCode",{parentName:"p"},"pyre")," will be faster than the first one."))}b.isMDXComponent=!0},95:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),s=b(n),m=r,d=s["".concat(c,".").concat(m)]||s[m]||u[m]||o;return n?a.a.createElement(d,i(i({ref:t},l),{},{components:n})):a.a.createElement(d,i({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:r,c[1]=i;for(var l=2;l<o;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);