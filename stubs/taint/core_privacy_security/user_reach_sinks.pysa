# Email
def smtplib.SMTP.sendmail(
	self,
	from_addr: TaintSink[EmailSend],
	to_addrs: TaintSink[EmailSend],
	msg: TaintSink[EmailSend]
): ...

def django.core.mail.send_mail(
	subject: TaintSink[EmailSend],
	message: TaintSink[EmailSend],
	from_email: TaintSink[EmailSend],
	recipient_list: TaintSink[EmailSend],
	html_message: TaintSink[EmailSend]
): ...
def django.core.mail.message.EmailMessage.__init__(
	self,
	subject: TaintSink[EmailSend],
	body: TaintSink[EmailSend],
	from_email: TaintSink[EmailSend],
	to: TaintSink[EmailSend],
	bcc: TaintSink[EmailSend],
	attachments: TaintSink[EmailSend],
	headers: TaintSink[EmailSend],
	cc: TaintSink[EmailSend],
	reply_to: TaintSink[EmailSend],
	connection
): ...

def email.message_from_string(s: TaintSink[EmailSend]): ...
def email.message_from_bytes(s: TaintSink[EmailSend]): ...

def email.parser.Parser.parsestr(text: TaintSink[EmailSend]): ...
def email.parser.HeaderParser.parsestr(text: TaintSink[EmailSend]): ...
def email.parser.BytesParser.parsebytes(text: TaintSink[EmailSend]): ...
def email.parser.BytesHeaderParser.parsebytes(text: TaintSink[EmailSend]): ...

email.message.Message.preamble: TaintSink[EmailSend] = ...
email.message.Message.epilogue: TaintSink[EmailSend] = ...

def email.message.Message.set_unixfrom(unixfrom: TaintSink[EmailSend]): ...
def email.message.Message.attach(payload: TaintSink[EmailSend]): ...
def email.message.Message.set_payload(payload: TaintSink[EmailSend]): ...
def email.message.Message.__setitem__(name: TaintSink[EmailSend], val: TaintSink[EmailSend]): ...
def email.message.Message.add_header(_name: TaintSink[EmailSend], _value: TaintSink[EmailSend], **_params: TaintSink[EmailSend]): ...
def email.message.Message.replace_header(_name: TaintSink[EmailSend], _value: TaintSink[EmailSend]): ...
def email.message.Message.set_param(param: TaintSink[EmailSend], value: TaintSink[EmailSend], header: TaintSink[EmailSend] = ...): ...

def email.message.MIMEPart.set_content(*args: TaintSink[EmailSend]): ...
def email.message.MIMEPart.add_related(*args: TaintSink[EmailSend]): ...
def email.message.MIMEPart.add_alternative(*args: TaintSink[EmailSend]): ...
def email.message.MIMEPart.add_attachment(*args: TaintSink[EmailSend]): ...

def email.contentmanager.ContentManager.set_content(obj: TaintSink[EmailSend]): ...

def email.mime.application.MIMEApplication.__init__(_data: TaintSink[EmailSend]): ...
def email.mime.audio.MIMEAudio.__init__(_audiodata: TaintSink[EmailSend]): ...
def email.mime.image.MIMEImage.__init__(_imagedata: TaintSink[EmailSend]): ...
def email.mime.message.MIMEMessage.__init__(_msg: TaintSink[EmailSend]): ...
def email.mime.text.MIMEText.__init__(_text: TaintSink[EmailSend]): ...
