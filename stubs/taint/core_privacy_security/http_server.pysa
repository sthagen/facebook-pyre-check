# This is a file object pointing to the start of the request data (post headers)
socketserver.StreamRequestHandler.rfile: TaintSource[UserControlled, UserControlled_Payload]
socketserver.DatagramRequestHandler.rfile: TaintSource[UserControlled, UserControlled_Payload]
# Note: Technically, this allows you to write headers too, but marking this
# ResponseHeaderName/ResponseHeaderValue will be too noisy.
socketserver.StreamRequestHandler.wfile: TaintSink[ReturnedToUser]
socketserver.DatagramRequestHandler.wfile: TaintSink[ReturnedToUser]

http.server.BaseHTTPRequestHandler.requestline: TaintSource[UserControlled, URL]
http.server.BaseHTTPRequestHandler.path: TaintSource[UserControlled, URL]
http.server.BaseHTTPRequestHandler.headers: TaintSource[UserControlled, HeaderData]
def http.server.BaseHTTPRequestHandler.send_error(self, code: TaintSink[ReturnedToUser], message: TaintSink[ReturnedToUser], explain: TaintSink[ReturnedToUser]): ...
def http.server.BaseHTTPRequestHandler.send_response(self, code: TaintSink[ReturnedToUser], message: TaintSink[ReturnedToUser]): ...
def http.server.BaseHTTPRequestHandler.send_header(self, keyword: TaintSink[ReturnedToUser, ResponseHeaderName], value: TaintSink[ReturnedToUser, ResponseHeaderValue]): ...
def http.server.BaseHTTPRequestHandler.send_response_only(self, code: TaintSink[ReturnedToUser], message: TaintSink[ReturnedToUser]): ...
