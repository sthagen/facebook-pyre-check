# Request URI related
@property
def falcon.request.Request.app() -> TaintSource[UserControlled, UserControlled_Payload, URL]: ...
# This will also take care of marking Request.relative_uri Request.uri Request.prefix in the same way
# since they are constructed on top of Request.path https://falcon.readthedocs.io/en/stable/_modules/falcon/request.html#Request

falcon.request.Request.path: TaintSource[UserControlled, UserControlled_Payload, URL] = ...

# Request.url is assigned dinamically so need to explicitly mark it
falcon.request.Request.url: TaintSource[UserControlled, UserControlled_Payload, URL] = ...
def falcon.util.uri.decode() -> TaintSource[UserControlled, UserControlled_Payload, URL]: ...

# Request Params
falcon.request.Request.query_string: TaintSource[UserControlled, UserControlled_Payload] = ...
@property
def falcon.request.Request.params() -> TaintSource[UserControlled, UserControlled_Payload]: ...
falcon.request.Request._params: TaintSource[UserControlled, UserControlled_Payload] = ...
falcon.request.Request.stream: TaintSource[UserControlled, UserControlled_Payload] = ...
falcon.request.Request.env: TaintSource[UserData, HeaderData] = ...
def falcon.util.uri.parse_query_string() -> TaintSource[UserControlled, UserControlled_Payload]: ...
@SanitizeSingleTrace(TaintSource[UserControlled])
def falcon.request.Request.get_param_as_bool(): ...
@SanitizeSingleTrace(TaintSource[UserControlled_Payload])
def falcon.request.Request.get_param_as_bool(): ...

# Request Cookies
@property
def falcon.request.Request.cookies() -> TaintSource[UserControlled, UserControlled_Meta, Cookies]: ...
falcon.request.Request._cookies: TaintSource[UserControlled, UserControlled_Meta, Cookies] = ...

# Request Header
# This will also take care of marking forwarded_uri forwarded_prefix
@property
def falcon.request.Request.forwarded_host() -> TaintSource[UserControlled, UserControlled_Meta]: ...
@property
def falcon.request.Request.headers() -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
@property
def falcon.request.Request.access_route() -> TaintSource[UserControlled, UserControlled_Meta]: ...
def falcon.request.Request.get_header() -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
falcon.request.Request.user_agent: TaintSource[UserControlled, UserControlled_Meta] = ...
falcon.request.Request.referer: TaintSource[UserControlled, UserControlled_Meta, HeaderData] = ...
falcon.request.Request.auth: TaintSource[UserControlled, UserControlled_Meta, HeaderData] = ...

# Response
falcon.response.Response._media: TaintSink[ReturnedToUser, XSS] = ...
falcon.response.Response._media: TaintSource[ResponseData] = ...
falcon.response.Response.body: TaintSink[ReturnedToUser, XSS] = ...
falcon.response.Response.body: TaintSource[ResponseData] = ...
falcon.response.Response._data: TaintSink[ReturnedToUser, XSS] = ...
falcon.response.Response._data: TaintSource[ResponseData] = ...
falcon.response.Response.stream: TaintSink[ReturnedToUser, XSS] = ...
falcon.response.Response.stream: TaintSource[ResponseData] = ...


# Response Headers
falcon.response.Response._headers: TaintSink[ResponseHeaderName, ResponseHeaderValue]


# Redirects
def falcon.redirects.HTTPMovedPermanently.__init__(
    location: TaintSink[Redirect, ReturnedToUser],
    headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser],
): ...
def falcon.redirects.HTTPFound.__init__(
    location: TaintSink[Redirect, ReturnedToUser],
    headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser],
): ...
def falcon.redirects.HTTPSeeOther.__init__(
    location: TaintSink[Redirect, ReturnedToUser],
    headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser],
): ...
def falcon.redirects.HTTPTemporaryRedirect.__init__(
    location: TaintSink[Redirect, ReturnedToUser],
    headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser],
): ...
def falcon.redirects.HTTPPermanentRedirect.__init__(
    location: TaintSink[Redirect, ReturnedToUser],
    headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser],
): ...
