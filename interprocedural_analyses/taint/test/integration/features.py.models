@generated
{
  "kind": "issue",
  "data": {
    "callable": "features.async_issue_bools",
    "callable_line": 88,
    "code": 5002,
    "line": 90,
    "start": 16,
    "end": 17,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "features.py",
                "line": 89,
                "start": 17,
                "end": 39
              },
              "resolves_to": [ "features.async_tuple_of_bools" ],
              "port": "result[0]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "features.py",
              "line": 90,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-type": "bool" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_from_tuple",
    "callable_line": 72,
    "code": 5002,
    "line": 74,
    "start": 16,
    "end": 17,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "features.py",
                "line": 73,
                "start": 11,
                "end": 34
              },
              "resolves_to": [ "features.return_tuple_of_bools" ],
              "port": "result[0]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "features.py",
              "line": 74,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-type": "bool" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_bool",
    "callable_line": 52,
    "code": 5002,
    "line": 55,
    "start": 16,
    "end": 17,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "features.py",
              "line": 53,
              "start": 8,
              "end": 23
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" },
              { "always-via": "obscure" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "features.py",
              "line": 55,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-type": "bool" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_equality",
    "callable_line": 62,
    "code": 5002,
    "line": 65,
    "start": 16,
    "end": 31,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "features.py",
                "line": 63,
                "start": 8,
                "end": 32
              },
              "resolves_to": [ "features.returns_tainted_object" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" },
              { "always-via": "obscure" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "features.py",
              "line": 65,
              "start": 16,
              "end": 31
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-type": "bool" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.async_tuple_of_bools",
    "sources": [
      {
        "port": "result[0]",
        "taint": [
          {
            "root": {
              "filename": "features.py",
              "line": 85,
              "start": 11,
              "end": 26
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "port": "result[1]",
        "taint": [
          {
            "root": {
              "filename": "features.py",
              "line": 85,
              "start": 28,
              "end": 43
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.len",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.min",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(y)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.named",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(named_parameter)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.return_tuple_of_bools",
    "sources": [
      {
        "port": "result[0]",
        "taint": [
          {
            "root": {
              "filename": "features.py",
              "line": 69,
              "start": 11,
              "end": 26
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "port": "result[1]",
        "taint": [
          {
            "root": {
              "filename": "features.py",
              "line": 69,
              "start": 28,
              "end": 43
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-type": "bool" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.returns_tainted_object",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "features.py",
              "line": 59,
              "start": 11,
              "end": 26
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_constructor",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "obscure" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_len",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 18, "start": 15, "end": 16 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_left",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 22, "start": 15, "end": 16 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_or_not",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 35, "start": 19, "end": 20 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "type": "scalar" }, { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_right",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 26, "start": 18, "end": 19 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_named",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 30, "start": 33, "end": 34 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_with_tuple",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "decl": null,
            "tito": [
              { "line": 79, "start": 34, "end": 35 },
              { "line": 79, "start": 19, "end": 20 }
            ],
            "leaves": [
              { "kind": "LocalReturn", "name": "[1]" },
              { "kind": "LocalReturn", "name": "[0]" }
            ],
            "features": [ { "type": "scalar" }, { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
