@generated
{
  "kind": "issue",
  "data": {
    "callable": "source_sink_flow.match_flows",
    "callable_line": 17,
    "code": 5002,
    "line": 19,
    "start": 11,
    "end": 12,
    "filename": "source_sink_flow.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "source_sink_flow.py",
                "line": 18,
                "start": 8,
                "end": 21
              },
              "resolves_to": [ "source_sink_flow.some_source" ],
              "port": "result",
              "length": 2
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "source_sink_flow.py",
                "line": 19,
                "start": 11,
                "end": 12
              },
              "resolves_to": [ "source_sink_flow.bad" ],
              "port": "formal(arg)",
              "length": 2
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "source_sink_flow.bad",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "source_sink_flow.py",
                "line": 10,
                "start": 8,
                "end": 11
              },
              "resolves_to": [ "source_sink_flow.qux" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "source_sink_flow.bar",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "source_sink_flow.py",
              "line": 2,
              "start": 11,
              "end": 26
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "source_sink_flow.qux",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "source_sink_flow.py",
              "line": 6,
              "start": 16,
              "end": 19
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "source_sink_flow.some_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "source_sink_flow.py",
                "line": 14,
                "start": 11,
                "end": 16
              },
              "resolves_to": [ "source_sink_flow.bar" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
