@generated
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.combine_tainted_user_and_dangerous_vc",
    "callable_line": 21,
    "code": 4321,
    "line": 24,
    "start": 22,
    "end": 24,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 23,
              "start": 9,
              "end": 29
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context",
                "on_all_flows": true
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 24,
              "start": 22,
              "end": 24
            },
            "leaves": [
              { "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]" }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_triggered_context",
    "callable_line": 42,
    "code": 4321,
    "line": 44,
    "start": 34,
    "end": 36,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 43,
              "start": 9,
              "end": 29
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context",
                "on_all_flows": true
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "multiple_sources.py",
                "line": 44,
                "start": 34,
                "end": 36
              },
              "resolves_to": [
                "multiple_sources.demonstrate_triggered_context"
              ],
              "port": "formal(vc)",
              "length": 1
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]",
                "name": "multiple_sources.Node.send",
                "on_all_flows": true
              }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_triggered_input",
    "callable_line": 37,
    "code": 4321,
    "line": 39,
    "start": 32,
    "end": 34,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 38,
              "start": 9,
              "end": 32
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "multiple_sources.user_controlled_input",
                "on_all_flows": true
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "multiple_sources.py",
                "line": 39,
                "start": 32,
                "end": 34
              },
              "resolves_to": [
                "multiple_sources.demonstrate_triggered_input"
              ],
              "port": "formal(id)",
              "length": 1
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[id]]",
                "name": "multiple_sources.Node.send",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ],
    "features": [ { "always-via": "tito" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[id]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[id]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.get",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 10, "start": 19, "end": 21 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "[id]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(cls)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 10, "start": 15, "end": 18 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.send",
    "sources": [],
    "sinks": [
      {
        "port": "formal(vc)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[UserControlledAndVC[vc]]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[UserControlledAndVC[id]]" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.demonstrate_triggered_context",
    "sources": [],
    "sinks": [
      {
        "port": "formal(vc)",
        "taint": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 29,
              "start": 22,
              "end": 24
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]",
                "name": "multiple_sources.Node.send",
                "on_all_flows": true
              }
            ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.demonstrate_triggered_input",
    "sources": [],
    "sinks": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 34,
              "start": 4,
              "end": 16
            },
            "tito": [ { "line": 34, "start": 13, "end": 15 } ],
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[id]]",
                "name": "multiple_sources.Node.send",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.permissive_context",
    "sources": [
      {
        "port": "result",
        "taint": [
          { "decl": null, "leaves": [ { "kind": "PermissiveContext" } ] }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.user_controlled_input",
    "sources": [
      {
        "port": "result",
        "taint": [
          { "decl": null, "leaves": [ { "kind": "UserControlled" } ] }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
