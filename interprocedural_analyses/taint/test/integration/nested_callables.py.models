@generated
{
  "kind": "issue",
  "data": {
    "callable": "nested_callables.foo.inner",
    "callable_line": 5,
    "code": 5002,
    "line": 7,
    "start": 20,
    "end": 21,
    "filename": "nested_callables.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 6,
              "start": 12,
              "end": 27
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 7,
              "start": 20,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.foo.inner_with_model",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 10,
              "start": 15,
              "end": 30
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
