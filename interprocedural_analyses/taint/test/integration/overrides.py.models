@generated
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testB",
    "callable_line": 103,
    "code": 5002,
    "line": 106,
    "start": 20,
    "end": 21,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 104,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 106,
                "start": 20,
                "end": 21
              },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testB",
    "callable_line": 103,
    "code": 5002,
    "line": 105,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 104,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 105,
                "start": 14,
                "end": 15
              },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testBase",
    "callable_line": 71,
    "code": 5002,
    "line": 73,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 72,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 73,
                "start": 14,
                "end": 15
              },
              "resolves_to": [ "overrides.A.methodA", "overrides.D.methodA" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testBase",
    "callable_line": 71,
    "code": 5002,
    "line": 74,
    "start": 20,
    "end": 21,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 72,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 74,
                "start": 20,
                "end": 21
              },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testC",
    "callable_line": 119,
    "code": 5002,
    "line": 121,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 120,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          },
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 120,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 121,
                "start": 14,
                "end": 15
              },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testD",
    "callable_line": 135,
    "code": 5002,
    "line": 137,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 136,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 137,
                "start": 14,
                "end": 15
              },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testStaticB",
    "callable_line": 109,
    "code": 5002,
    "line": 111,
    "start": 18,
    "end": 19,
    "filename": "overrides.py",
    "message":
      "Test flow. Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 110,
                "start": 8,
                "end": 19
              },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "overrides.py",
                "line": 111,
                "start": 18,
                "end": 19
              },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.B::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.B::classMethod}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.B::methodB}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.Base::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.Base::classMethod}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.Base::methodA}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.Base::methodB}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.C::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.C::methodA}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{overrides.D::methodA}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.A.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 26, "start": 35, "end": 38 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 26, "start": 8, "end": 25 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.A.methodA",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 29,
              "start": 20,
              "end": 23
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 36, "start": 35, "end": 38 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 36, "start": 8, "end": 25 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.classMethod",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 43,
              "start": 20,
              "end": 23
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.methodB",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 39,
              "start": 15,
              "end": 30
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.Base.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.C.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 50, "start": 32, "end": 35 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 50, "start": 8, "end": 22 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 62, "start": 32, "end": 35 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "[r]" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 62, "start": 8, "end": 22 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.methodA",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 65,
              "start": 20,
              "end": 23
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.methodB",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 68,
              "start": 15,
              "end": 30
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.OverloadedOverride.methodA",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.constructorTest",
    "sources": [
      {
        "port": "result[r]",
        "taint": [
          {
            "root": {
              "filename": "overrides.py",
              "line": 152,
              "start": 15,
              "end": 30
            },
            "tito": [ { "line": 152, "start": 15, "end": 30 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": [
      {
        "port": "formal(cls)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 152, "start": 11, "end": 14 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ]
  }
}
