@generated
Call dependencies
properties.Class::__init__ (method) -> []
properties.Class::my_property (method) -> []
properties.Class::uses_other (method) -> [properties.Class::my_property (override)]
properties.Class::uses_property (method) -> [__test_source (fun) properties.Class::my_property (override)]
properties.Class::uses_property_but_no_tito_taint (method) -> [__test_source (fun) properties.Class::my_property (override)]
properties.ClassProperty::my_class_property (method) -> []
properties.Derived::uses_property (method) -> [__test_source (fun) properties.Class::my_property (method)]
properties.Derived::uses_property_but_no_tito_taint (method) -> [__test_source (fun) properties.Class::my_property (method)]
properties.DerivedTaintedSetter::my_property (method) -> []
properties.DerivedTaintedSetter::my_property$setter (method) -> [__test_sink (fun)]
properties.GrandDerived::my_property (method) -> []
properties.GrandDerived::my_property$setter (method) -> []
properties.OtherDerived::my_property (method) -> [__test_source (fun)]
properties.OtherDerived::uses_property_but_no_tito_taint (method) -> [__test_source (fun) properties.OtherDerived::my_property (method)]
properties.SetterMutatesValue::__init__ (method) -> []
properties.SetterMutatesValue::p (method) -> []
properties.SetterMutatesValue::p$setter (method) -> []
properties.TaintedGetterAndSetter::my_property (method) -> [__test_sink (fun)]
properties.TaintedGetterAndSetter::my_property$setter (method) -> []
properties.TaintedGetterAndSetter::uses_property (method) -> [properties.TaintedGetterAndSetter::my_property (override)]
properties.TaintedGetterAndSetter::writes_to_property (method) -> [__test_source (fun) properties.TaintedGetterAndSetter::my_property$setter (override)]
properties.sets_tainted_value (fun) -> [__test_source (fun) properties.TaintedGetterAndSetter::my_property$setter (override)]
properties.setters_are_simulated (fun) -> [__test_sink (fun) __test_source (fun) object::__new__ (method) properties.SetterMutatesValue::__init__ (method) properties.SetterMutatesValue::p (method) properties.SetterMutatesValue::p$setter (method)]
properties.test_issue_in_class_property (fun) -> [__test_sink (fun) properties.ClassProperty::my_class_property (method)]
