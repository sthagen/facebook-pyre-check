@generated
{
  "kind": "issue",
  "data": {
    "callable": "cross_repository.test",
    "callable_line": 12,
    "code": 5002,
    "line": 14,
    "start": 16,
    "end": 17,
    "filename": "cross_repository.py",
    "message":
      "Data from [UserControlled] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "cross_repository.py",
              "line": 13,
              "start": 8,
              "end": 30
            },
            "leaves": [
              {
                "port": "producer:1:result",
                "kind": "UserControlled",
                "name": "crossRepositorySource",
                "on_all_flows": true
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "cross_repository.py",
              "line": 14,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "cross_repository.cross_repository_source",
    "sources": [
      {
        "port": "formal(source_parameter)",
        "taint": [
          {
            "decl": null,
            "leaves": [
              {
                "port": "producer:1:formal(0)",
                "kind": "UserControlled",
                "name": "crossRepositorySource",
                "on_all_flows": true
              }
            ]
          }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(source_parameter)",
        "taint": [
          {
            "root": {
              "filename": "cross_repository.py",
              "line": 5,
              "start": 16,
              "end": 32
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "cross_repository.cross_repository_source",
    "callable_line": 4,
    "code": 5002,
    "line": 5,
    "start": 16,
    "end": 32,
    "filename": "cross_repository.py",
    "message":
      "Data from [UserControlled] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "cross_repository.py",
              "line": 4,
              "start": 28,
              "end": 44
            },
            "leaves": [
              {
                "port": "producer:1:formal(0)",
                "kind": "UserControlled",
                "name": "crossRepositorySource",
                "on_all_flows": true
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "cross_repository.py",
              "line": 5,
              "start": 16,
              "end": 32
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "cross_repository.returns_crtex_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "decl": null,
            "leaves": [
              {
                "port": "producer:1:result",
                "kind": "UserControlled",
                "name": "crossRepositorySource",
                "on_all_flows": true
              }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
