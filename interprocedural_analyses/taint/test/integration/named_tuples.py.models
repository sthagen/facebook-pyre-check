@generated
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_bad",
    "callable_line": 15,
    "code": 5002,
    "line": 17,
    "start": 16,
    "end": 21,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 16,
                "start": 8,
                "end": 23
              },
              "resolves_to": [ "named_tuples.tainted_tuple" ],
              "port": "result[bad]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" },
              { "always-has": "first-field" },
              { "always-first-field": "bad" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 17,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-has": "first-field" },
      { "always-first-field": "bad" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_inherited_named_tuple",
    "callable_line": 50,
    "code": 5002,
    "line": 52,
    "start": 16,
    "end": 21,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 51,
                "start": 8,
                "end": 25
              },
              "resolves_to": [ "named_tuples.inherited_tuple" ],
              "port": "result[bad]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" },
              { "always-has": "first-field" },
              { "always-first-field": "bad" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 52,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-has": "first-field" },
      { "always-first-field": "bad" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_old_school_named_tuples",
    "callable_line": 32,
    "code": 5002,
    "line": 34,
    "start": 16,
    "end": 21,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 33,
                "start": 8,
                "end": 27
              },
              "resolves_to": [ "named_tuples.tainted_old_tuple" ],
              "port": "result[bad]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" },
              { "always-has": "first-field" },
              { "always-first-field": "bad" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 34,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-has": "first-field" },
      { "always-first-field": "bad" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{typing.NamedTuple::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ],
            "features": [ { "type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.MyNamedTuple.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.OldSchoolNamedTuple.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.inherited_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 47,
              "start": 35,
              "end": 50
            },
            "tito": [ { "line": 47, "start": 35, "end": 50 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.tainted_old_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 29,
              "start": 35,
              "end": 50
            },
            "tito": [ { "line": 29, "start": 35, "end": 50 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.tainted_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "named_tuples.py",
              "line": 12,
              "start": 28,
              "end": 43
            },
            "tito": [ { "line": 12, "start": 28, "end": 43 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
