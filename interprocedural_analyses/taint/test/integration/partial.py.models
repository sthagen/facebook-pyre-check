@generated
{
  "kind": "issue",
  "data": {
    "callable": "partial.multiprocessing_tainted",
    "callable_line": 31,
    "code": 5002,
    "line": 32,
    "start": 58,
    "end": 73,
    "filename": "partial.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "partial.py",
              "line": 32,
              "start": 58,
              "end": 73
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "partial.py",
                "line": 32,
                "start": 58,
                "end": 73
              },
              "resolves_to": [ "partial.a_flows_to_sink" ],
              "port": "formal(a)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "partial.partial_application_with_named_a",
    "callable_line": 21,
    "code": 5002,
    "line": 23,
    "start": 31,
    "end": 32,
    "filename": "partial.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "partial.py",
              "line": 22,
              "start": 8,
              "end": 23
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "partial.py",
                "line": 23,
                "start": 31,
                "end": 32
              },
              "resolves_to": [ "partial.a_flows_to_sink" ],
              "port": "formal(a)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "partial.partial_application_with_tainted",
    "callable_line": 11,
    "code": 5002,
    "line": 13,
    "start": 29,
    "end": 30,
    "filename": "partial.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "partial.py",
              "line": 12,
              "start": 8,
              "end": 23
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "partial.py",
                "line": 13,
                "start": 29,
                "end": 30
              },
              "resolves_to": [ "partial.a_flows_to_sink" ],
              "port": "formal(a)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "partial.a_flows_to_sink",
    "sources": [],
    "sinks": [
      {
        "port": "formal(a)",
        "taint": [
          {
            "root": {
              "filename": "partial.py",
              "line": 8,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
