@generated
{
  "kind": "issue",
  "data": {
    "callable": "static_methods.run_test",
    "callable_line": 14,
    "code": 5002,
    "line": 15,
    "start": 9,
    "end": 24,
    "filename": "static_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "static_methods.py",
              "line": 15,
              "start": 9,
              "end": 24
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "static_methods.py",
                "line": 15,
                "start": 9,
                "end": 24
              },
              "resolves_to": [ "static_methods.test" ],
              "port": "formal(source)",
              "length": 2
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "static_methods.StaticClass.sink",
    "sources": [],
    "sinks": [
      {
        "port": "formal(oops)",
        "taint": [
          {
            "root": {
              "filename": "static_methods.py",
              "line": 7,
              "start": 20,
              "end": 24
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "static_methods.test",
    "sources": [],
    "sinks": [
      {
        "port": "formal(source)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "static_methods.py",
                "line": 11,
                "start": 28,
                "end": 34
              },
              "resolves_to": [ "static_methods.StaticClass.sink" ],
              "port": "formal(oops)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
