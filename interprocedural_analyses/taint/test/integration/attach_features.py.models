@generated
{
  "kind": "model",
  "data": {
    "callable": "attach_features.HasMethods.method_with_optionals",
    "sources": [],
    "sinks": [
      {
        "port": "formal(b)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "string_concat_rhs" }
            ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 51,
              "start": 20,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "string_concat_rhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.attach_without_tito",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.inferred_is_propagated",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "attach_features.py",
                "line": 11,
                "start": 11,
                "end": 33
              },
              "resolves_to": [ "attach_features.source_with_inferred" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "attach_features.source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.inferred_sink",
    "sources": [],
    "sinks": [
      {
        "port": "formal(taint_without_feature)",
        "taint": [
          {
            "root": {
              "filename": "attach_features.py",
              "line": 17,
              "start": 16,
              "end": 37
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      },
      {
        "port": "formal(taint_right)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_rhs" } ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 16,
              "start": 16,
              "end": 27
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-via": "string_concat_rhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      },
      {
        "port": "formal(taint_left)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 15,
              "start": 16,
              "end": 26
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.modeled_sink_with_optionals",
    "sources": [],
    "sinks": [
      {
        "port": "formal(b)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "string_concat_rhs" }
            ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 46,
              "start": 16,
              "end": 17
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "string_concat_rhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.sink_is_propagated",
    "sources": [],
    "sinks": [
      {
        "port": "formal(argument)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "attach_features.py",
                "line": 21,
                "start": 18,
                "end": 26
              },
              "resolves_to": [ "attach_features.inferred_sink" ],
              "port": "formal(taint_left)",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.source",
    "sources": [
      {
        "port": "result",
        "taint": [ { "decl": null, "leaves": [ { "kind": "Test" } ] } ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.source_with_inferred",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 6,
              "start": 8,
              "end": 16
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "attach_features.source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.taint_in_taint_out",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.tito_and_sink",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_rhs" } ]
          },
          {
            "root": {
              "filename": "attach_features.py",
              "line": 29,
              "start": 16,
              "end": 19
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [
              { "always-via": "string_concat_rhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "Attach" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "attach_features.tito_is_propagated",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 34, "start": 30, "end": 33 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "" } ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "string_concat_lhs" }
            ]
          }
        ]
      }
    ]
  }
}
