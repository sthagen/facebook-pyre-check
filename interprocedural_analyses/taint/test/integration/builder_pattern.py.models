@generated
{
  "kind": "issue",
  "data": {
    "callable": "builder_pattern.test_issue",
    "callable_line": 38,
    "code": 5002,
    "line": 40,
    "start": 4,
    "end": 62,
    "filename": "builder_pattern.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "builder_pattern.py",
              "line": 40,
              "start": 46,
              "end": 61
            },
            "tito": [ { "line": 40, "start": 46, "end": 61 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "builder_pattern.py",
                "line": 40,
                "start": 4,
                "end": 62
              },
              "resolves_to": [ "builder_pattern.Builder.async_save" ],
              "port": "formal(self)[_saved]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "builder_pattern.test_issue_with_sub_builder",
    "callable_line": 68,
    "code": 5002,
    "line": 70,
    "start": 4,
    "end": 5,
    "filename": "builder_pattern.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "builder_pattern.py",
              "line": 71,
              "start": 8,
              "end": 23
            },
            "tito": [ { "line": 71, "start": 8, "end": 23 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "builder_pattern.py",
                "line": 70,
                "start": 4,
                "end": 5
              },
              "resolves_to": [ "builder_pattern.Builder.async_save" ],
              "port": "formal(self)[_saved]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "builder_pattern.test_issue_with_type_var",
    "callable_line": 50,
    "code": 5002,
    "line": 52,
    "start": 4,
    "end": 5,
    "filename": "builder_pattern.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "builder_pattern.py",
              "line": 53,
              "start": 8,
              "end": 23
            },
            "tito": [ { "line": 53, "start": 8, "end": 23 } ],
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "builder_pattern.py",
                "line": 52,
                "start": 4,
                "end": 5
              },
              "resolves_to": [ "builder_pattern.Builder.async_save" ],
              "port": "formal(self)[_saved]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.async_save",
    "sources": [],
    "sinks": [
      {
        "port": "formal(self)[_saved]",
        "taint": [
          {
            "root": {
              "filename": "builder_pattern.py",
              "line": 22,
              "start": 20,
              "end": 31
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.set_not_saved",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(not_saved)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[_not_saved]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.set_not_saved_through_typevar",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(not_saved)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[_not_saved]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.set_saved",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(saved)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[_saved]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "builder_pattern.Builder.set_saved_through_typevar",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(saved)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[_saved]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      }
    ]
  }
}
