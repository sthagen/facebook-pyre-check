@generated
{
  "kind": "issue",
  "data": {
    "callable": "port.match_flows",
    "callable_line": 11,
    "code": 5002,
    "line": 13,
    "start": 15,
    "end": 16,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 12,
                "start": 8,
                "end": 22
              },
              "resolves_to": [ "port.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 13,
                "start": 15,
                "end": 16
              },
              "resolves_to": [ "port.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "port.match_star_arg_directly",
    "callable_line": 29,
    "code": 5002,
    "line": 30,
    "start": 31,
    "end": 45,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 30,
                "start": 31,
                "end": 45
              },
              "resolves_to": [ "port.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 30,
                "start": 31,
                "end": 45
              },
              "resolves_to": [ "port.star_arg_wrapper" ],
              "port": "formal(*rest1)[1][a]",
              "length": 3
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "port.match_star_arg_with_star",
    "callable_line": 24,
    "code": 5002,
    "line": 26,
    "start": 26,
    "end": 31,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 25,
                "start": 15,
                "end": 29
              },
              "resolves_to": [ "port.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 26,
                "start": 26,
                "end": 31
              },
              "resolves_to": [ "port.star_arg_wrapper" ],
              "port": "formal(*rest1)[1][a]",
              "length": 3
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "port.match_star_star_arg_directly",
    "callable_line": 46,
    "code": 5002,
    "line": 47,
    "start": 40,
    "end": 54,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 47,
                "start": 40,
                "end": 54
              },
              "resolves_to": [ "port.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 47,
                "start": 40,
                "end": 54
              },
              "resolves_to": [ "port.star_star_arg_wrapper" ],
              "port": "formal(**kw)[arg][a]",
              "length": 3
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "port.match_star_star_arg_with_star",
    "callable_line": 41,
    "code": 5002,
    "line": 43,
    "start": 31,
    "end": 37,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 42,
                "start": 27,
                "end": 41
              },
              "resolves_to": [ "port.source_field" ],
              "port": "result[a]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 43,
                "start": 31,
                "end": 37
              },
              "resolves_to": [ "port.star_star_arg_wrapper" ],
              "port": "formal(**kw)[arg][a]",
              "length": 3
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.Foo.some_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "port.py",
              "line": 53,
              "start": 15,
              "end": 30
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.refer_to_method_as_field",
    "sources": [],
    "sinks": [
      {
        "port": "formal(foo)[some_source]",
        "taint": [
          {
            "root": {
              "filename": "port.py",
              "line": 59,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "port.refer_to_method_as_field",
    "callable_line": 56,
    "code": 5002,
    "line": 59,
    "start": 16,
    "end": 21,
    "filename": "port.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 58,
                "start": 12,
                "end": 27
              },
              "resolves_to": [ "port.Foo.some_source" ],
              "port": "result",
              "length": 1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "port.py",
              "line": 59,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.sink_field",
    "sources": [],
    "sinks": [
      {
        "port": "formal(arg)[a]",
        "taint": [
          {
            "root": {
              "filename": "port.py",
              "line": 8,
              "start": 16,
              "end": 21
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.source_field",
    "sources": [
      {
        "port": "result[a]",
        "taint": [
          {
            "root": {
              "filename": "port.py",
              "line": 3,
              "start": 15,
              "end": 30
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "__test_source",
                "on_all_flows": true
              }
            ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.star_arg",
    "sources": [],
    "sinks": [
      {
        "port": "formal(*rest1)[1][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 17,
                "start": 15,
                "end": 22
              },
              "resolves_to": [ "port.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.star_arg_wrapper",
    "sources": [],
    "sinks": [
      {
        "port": "formal(*rest1)[1][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 21,
                "start": 16,
                "end": 21
              },
              "resolves_to": [ "port.star_arg" ],
              "port": "formal(*rest1)[1][a]",
              "length": 2
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.star_star_arg",
    "sources": [],
    "sinks": [
      {
        "port": "formal(**kw)[arg][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 34,
                "start": 15,
                "end": 28
              },
              "resolves_to": [ "port.sink_field" ],
              "port": "formal(arg)[a]",
              "length": 1
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "port.star_star_arg_wrapper",
    "sources": [],
    "sinks": [
      {
        "port": "formal(**kw)[arg][a]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "port.py",
                "line": 38,
                "start": 21,
                "end": 29
              },
              "resolves_to": [ "port.star_star_arg" ],
              "port": "formal(**kw)[arg][a]",
              "length": 2
            },
            "leaves": [
              { "kind": "Test", "name": "__test_sink", "on_all_flows": true }
            ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
