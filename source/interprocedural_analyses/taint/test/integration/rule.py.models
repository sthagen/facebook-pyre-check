@generated
{
  "kind": "issue",
  "data": {
    "callable": "rule.alarm",
    "callable_line": 15,
    "code": 5999,
    "line": 17,
    "start": 9,
    "end": 10,
    "filename": "rule.py",
    "message": "[MyTestSource] may reach [MyTestSink]",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "rule.source", "port": "leaf:return" }
                ],
                "kind": "MyTestSource"
              }
            ],
            "origin": {
              "filename": "rule.py",
              "line": 16,
              "start": 8,
              "end": 16
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "rule.sink", "port": "leaf:x" } ],
                "kind": "MyTestSink"
              }
            ],
            "origin": {
              "filename": "rule.py",
              "line": 17,
              "start": 9,
              "end": 10
            },
            "call_site": "17:4-17:11"
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "rule.sink",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "rule.alarm:5999:0:Call|rule.sink|0|formal(x):076d2475a85306067a619d027c5f3f05"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "rule.sink",
    "filename": "rule.py",
    "callable_line": 11,
    "sinks": [
      {
        "port": "formal(x, position=0)",
        "taint": [
          { "kinds": [ { "kind": "MyTestSink" } ], "declaration": null }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "rule.source",
    "filename": "rule.py",
    "callable_line": 7,
    "sources": [
      {
        "port": "result",
        "taint": [
          { "kinds": [ { "kind": "MyTestSource" } ], "declaration": null }
        ]
      }
    ]
  }
}
