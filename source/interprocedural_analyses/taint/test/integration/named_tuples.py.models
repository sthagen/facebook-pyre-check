@generated
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_bad",
    "callable_line": 20,
    "code": 5002,
    "line": 22,
    "start": 15,
    "end": 20,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via": "tito" },
                  { "always-via": "special_source" }
                ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "bad" }
            ],
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 21,
                "start": 8,
                "end": 23
              },
              "resolves_to": [ "named_tuples.tainted_tuple" ],
              "port": "result[bad]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "named_tuples.py",
              "line": 22,
              "start": 15,
              "end": 20
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "bad" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_inherited_named_tuple",
    "callable_line": 55,
    "code": 5002,
    "line": 57,
    "start": 15,
    "end": 20,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via": "tito" },
                  { "always-via": "special_source" }
                ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "bad" }
            ],
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 56,
                "start": 8,
                "end": 25
              },
              "resolves_to": [ "named_tuples.inherited_tuple" ],
              "port": "result[bad]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "named_tuples.py",
              "line": 57,
              "start": 15,
              "end": 20
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "bad" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "named_tuples.issue_with_old_school_named_tuples",
    "callable_line": 37,
    "code": 5002,
    "line": 39,
    "start": 15,
    "end": 20,
    "filename": "named_tuples.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via": "tito" },
                  { "always-via": "special_source" }
                ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "bad" }
            ],
            "call": {
              "position": {
                "filename": "named_tuples.py",
                "line": 38,
                "start": 8,
                "end": 27
              },
              "resolves_to": [ "named_tuples.tainted_old_tuple" ],
              "port": "result[bad]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "named_tuples.py",
              "line": 39,
              "start": 15,
              "end": 20
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "bad" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{named_tuples.MyNamedTuple::__init__}",
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{named_tuples.OldSchoolNamedTuple::__init__}",
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{typing.NamedTuple::__init__}",
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "local_features": [ { "type": "integer" }, { "type": "scalar" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.MyNamedTuple.__init__",
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.OldSchoolNamedTuple.__init__",
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[bad]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[benign]" ], "kind": "LocalReturn" }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.inherited_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito": [ { "line": 52, "start": 35, "end": 49 } ],
            "root": {
              "filename": "named_tuples.py",
              "line": 52,
              "start": 35,
              "end": 49
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.tainted_old_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito": [ { "line": 34, "start": 35, "end": 49 } ],
            "root": {
              "filename": "named_tuples.py",
              "line": 34,
              "start": 35,
              "end": 49
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "named_tuples.tainted_tuple",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito": [ { "line": 17, "start": 28, "end": 42 } ],
            "root": {
              "filename": "named_tuples.py",
              "line": 17,
              "start": 28,
              "end": 42
            }
          }
        ]
      }
    ]
  }
}
