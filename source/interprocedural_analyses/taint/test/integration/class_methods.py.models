@generated
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.bar",
    "callable_line": 17,
    "code": 5002,
    "line": 18,
    "start": 13,
    "end": 27,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 18,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 18,
                "start": 13,
                "end": 27
              },
              "resolves_to": [ "class_methods.Test.foo" ],
              "port": "formal(x, position=1)"
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "class_methods.Test.foo",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "class_methods.bar:5002:0:Call|class_methods.Test.foo|0|formal(x):2f097eee7893b1af08f6427b3d4633d4"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.issue_with_abstract_class_method",
    "callable_line": 100,
    "code": 5002,
    "line": 107,
    "start": 36,
    "end": 50,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 107,
              "start": 36,
              "end": 50
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 107,
                "start": 36,
                "end": 50
              },
              "resolves_to": [
                "class_methods.C.one_hop_static_abstractmethod"
              ],
              "port": "formal(arg, position=1)"
            },
            "receiver_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "class_methods.C.one_hop_static_abstractmethod",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "class_methods.issue_with_abstract_class_method:5002:0:Call|class_methods.C.one_hop_static_abstractmethod|0|formal(arg):79ca07a75871e8551c5767536c472cf8"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.issue_with_abstract_class_method",
    "callable_line": 100,
    "code": 5002,
    "line": 102,
    "start": 27,
    "end": 41,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 102,
              "start": 27,
              "end": 41
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 102,
                "start": 27,
                "end": 41
              },
              "resolves_to": [ "class_methods.C.one_hop_class_method" ],
              "port": "formal(arg, position=1)"
            },
            "receiver_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "class_methods.C.one_hop_class_method",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "class_methods.issue_with_abstract_class_method:5002:0:Call|class_methods.C.one_hop_class_method|0|formal(arg):bf0c4aaeeb86dd4e20e62c27eb258873"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.issue_with_abstract_class_method",
    "callable_line": 100,
    "code": 5002,
    "line": 106,
    "start": 35,
    "end": 49,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 106,
              "start": 35,
              "end": 49
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 106,
                "start": 35,
                "end": 49
              },
              "resolves_to": [
                "class_methods.C.one_hop_class_abstractmethod"
              ],
              "port": "formal(arg, position=1)"
            },
            "receiver_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "class_methods.C.one_hop_class_abstractmethod",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "class_methods.issue_with_abstract_class_method:5002:0:Call|class_methods.C.one_hop_class_abstractmethod|0|formal(arg):2de3523c97a4f033d1de91a049342341"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.issue_with_abstract_class_method",
    "callable_line": 100,
    "code": 5002,
    "line": 101,
    "start": 36,
    "end": 50,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 101,
              "start": 36,
              "end": 50
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 101,
                "start": 36,
                "end": 50
              },
              "resolves_to": [
                "class_methods.C.one_hop_abstract_class_method"
              ],
              "port": "formal(arg, position=1)"
            },
            "receiver_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [],
    "sink_handle": {
      "kind": "Call",
      "callee": "class_methods.C.one_hop_abstract_class_method",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "class_methods.issue_with_abstract_class_method:5002:0:Call|class_methods.C.one_hop_abstract_class_method|0|formal(arg):f3ac8a25112725845df1a567affc4850"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "class_methods.issue_with_abstract_property",
    "callable_line": 110,
    "code": 5002,
    "line": 113,
    "start": 15,
    "end": 37,
    "filename": "class_methods.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [
              { "line": 112, "start": 29, "end": 43 },
              { "line": 113, "start": 15, "end": 16 }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 112,
              "start": 29,
              "end": 43
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 113,
              "start": 15,
              "end": 37
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "tito" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "class_methods.issue_with_abstract_property:5002:0:Call|_test_sink|0|formal(arg):68b5934e085eccc98dee7f4ca2c8bcb9"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{class_methods.C.abstract_class_method}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{class_methods.C.class_abstractmethod}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{class_methods.D.abstract_class_method}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{class_methods.D.class_abstractmethod}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 614,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 615,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.class_method",
    "filename": "class_methods.py",
    "callable_line": 34,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 35,
              "start": 19,
              "end": 22
            },
            "caller_interval": [ { "lower": 6, "upper": 9 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.one_hop_abstract_class_method",
    "filename": "class_methods.py",
    "callable_line": 30,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "length": 1, "kind": "Test" } ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 31,
                "start": 34,
                "end": 37
              },
              "resolves_to": [ "class_methods.D.abstract_class_method" ],
              "port": "formal(arg, position=1)"
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": true
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.one_hop_class_abstractmethod",
    "filename": "class_methods.py",
    "callable_line": 55,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "length": 1, "kind": "Test" } ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 56,
                "start": 33,
                "end": 36
              },
              "resolves_to": [ "class_methods.D.class_abstractmethod" ],
              "port": "formal(arg, position=1)"
            },
            "caller_interval": [ { "lower": 6, "upper": 9 } ],
            "is_self_call": true
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.one_hop_class_method",
    "filename": "class_methods.py",
    "callable_line": 38,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "length": 1, "kind": "Test" } ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 39,
                "start": 25,
                "end": 28
              },
              "resolves_to": [ "class_methods.C.class_method" ],
              "port": "formal(arg, position=1)"
            },
            "caller_interval": [ { "lower": 6, "upper": 9 } ],
            "is_self_call": true
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.one_hop_static_abstractmethod",
    "filename": "class_methods.py",
    "callable_line": 64,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "length": 1, "kind": "Test" } ],
            "call": {
              "position": {
                "filename": "class_methods.py",
                "line": 66,
                "start": 34,
                "end": 37
              },
              "resolves_to": [ "class_methods.C.static_abstractmethod" ],
              "port": "formal(arg, position=0)"
            },
            "caller_interval": [ { "lower": 6, "upper": 9 } ],
            "is_self_call": true
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.C.static_abstractmethod",
    "filename": "class_methods.py",
    "callable_line": 60,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 61,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.D.abstract_class_method",
    "filename": "class_methods.py",
    "callable_line": 81,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 82,
              "start": 19,
              "end": 22
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.D.abstract_method",
    "filename": "class_methods.py",
    "callable_line": 84,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 85,
              "start": 19,
              "end": 22
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.D.class_abstractmethod",
    "filename": "class_methods.py",
    "callable_line": 88,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 89,
              "start": 19,
              "end": 22
            },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.D.my_abstract_property",
    "filename": "class_methods.py",
    "callable_line": 92,
    "tito": [
      {
        "port": "formal(self, position=0)[_my_abstract_property]",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.D.my_abstract_property@setter",
    "filename": "class_methods.py",
    "callable_line": 96,
    "tito": [
      {
        "port": "formal(my_abstract_property, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[_my_abstract_property]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "class_methods.Test.foo",
    "filename": "class_methods.py",
    "callable_line": 13,
    "sinks": [
      {
        "port": "formal(x, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "class_methods.py",
              "line": 14,
              "start": 26,
              "end": 27
            },
            "caller_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(x, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "": 0 },
                "length": 1,
                "kind": "LocalReturn"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" }, { "always-via": "tito" }
            ],
            "tito_positions": [ { "line": 14, "start": 26, "end": 27 } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
