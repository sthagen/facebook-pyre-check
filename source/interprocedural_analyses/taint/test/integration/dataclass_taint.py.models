@generated
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.issue_in_dataclass_constructor",
    "callable_line": 38,
    "code": 5002,
    "line": 39,
    "start": 26,
    "end": 40,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 39,
              "start": 26,
              "end": 40
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via": "special_sink" },
                  { "always-type": "integer" },
                  { "always-type": "scalar" }
                ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "dataclass_taint.py",
                "line": 39,
                "start": 26,
                "end": 40
              },
              "resolves_to": [ "dataclass_taint.DataClassWIthInit.__init__" ],
              "port": "formal(bad)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-type": "integer" },
      { "always-type": "scalar" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "dataclass_taint.DataClassWIthInit.__init__",
      "index": 0,
      "parameter": "formal(bad)"
    },
    "master_handle": "dataclass_taint.issue_in_dataclass_constructor:5002:0:Call|dataclass_taint.DataClassWIthInit.__init__|0|formal(bad):95af429aa6b3669c034f8f4ade606c6b"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.issue_with_weird_dataclass",
    "callable_line": 59,
    "code": 5002,
    "line": 61,
    "start": 15,
    "end": 22,
    "filename": "dataclass_taint.py",
    "message": "Data from [UserControlled] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "leaves": [
                  {
                    "port": "leaf:bad",
                    "name": "dataclass_taint.WeirdDataClass.__init__"
                  }
                ],
                "length": 1,
                "kind": "UserControlled"
              }
            ],
            "local_features": [
              { "has": "first-field" }, { "first-field": "bad" }
            ],
            "call": {
              "position": {
                "filename": "dataclass_taint.py",
                "line": 60,
                "start": 10,
                "end": 42
              },
              "resolves_to": [ "dataclass_taint.WeirdDataClass.__init__" ],
              "port": "result[bad]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 61,
              "start": 15,
              "end": 22
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "bad" },
      { "always-via": "special_sink" },
      { "always-type": "integer" },
      { "always-type": "scalar" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "dataclass_taint.issue_with_weird_dataclass:5002:0:Call|_test_sink|0|formal(arg):6fbd040b3231779f4cd85c4deb5eefb3"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_class_attr_model_tainted_directly",
    "callable_line": 94,
    "code": 5002,
    "line": 104,
    "start": 4,
    "end": 25,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 104,
              "start": 28,
              "end": 42
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:return",
                    "name": "Obj{dataclass_taint.DataClassWithClassAttributeTaintedDirectly.bad}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 104,
              "start": 4,
              "end": 25
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Global",
      "callee": "Obj{dataclass_taint.DataClassWithClassAttributeTaintedDirectly.bad}",
      "index": 0
    },
    "master_handle": "dataclass_taint.test_class_attr_model_tainted_directly:5002:0:Global|Obj{dataclass_taint.DataClassWithClassAttributeTaintedDirectly.bad}|0:b81b9304aded9021a85d4fbe1e787a51"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_class_attr_model_tainted_directly",
    "callable_line": 94,
    "code": 5002,
    "line": 98,
    "start": 51,
    "end": 65,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 98,
              "start": 51,
              "end": 65
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:bad",
                    "name": "dataclass_taint.DataClassWithClassAttributeTaintedDirectly.__init__"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 98,
              "start": 51,
              "end": 65
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "dataclass_taint.DataClassWithClassAttributeTaintedDirectly.__init__",
      "index": 1,
      "parameter": "formal(bad)"
    },
    "master_handle": "dataclass_taint.test_class_attr_model_tainted_directly:5002:0:Call|dataclass_taint.DataClassWithClassAttributeTaintedDirectly.__init__|1|formal(bad):2f7989bea29b0339ab8a203e62db91c0"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_class_attr_model_tainted_in_constructor",
    "callable_line": 113,
    "code": 5002,
    "line": 117,
    "start": 56,
    "end": 70,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 117,
              "start": 56,
              "end": 70
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "leaves": [
                  {
                    "port": "leaf:bad",
                    "name": "dataclass_taint.DataClassWithClassAttributeTaintedInConstructor.__init__"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 117,
              "start": 56,
              "end": 70
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-type": "integer" },
      { "always-type": "scalar" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "dataclass_taint.DataClassWithClassAttributeTaintedInConstructor.__init__",
      "index": 1,
      "parameter": "formal(bad)"
    },
    "master_handle": "dataclass_taint.test_class_attr_model_tainted_in_constructor:5002:0:Call|dataclass_taint.DataClassWithClassAttributeTaintedInConstructor.__init__|1|formal(bad):4a7785b5b0dc31c99f8d25cf5234a82f"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.DataClassWithClassAttributeTaintedDirectly.bad}",
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.DataClassWithOtherSource.tainted}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.DataClassWithSource.tainted}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.WeirdDataClass.bad_sink}",
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClass.__init__",
    "tito": [
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[benign]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassSwapArguments.__init__",
    "tito": [
      {
        "port": "formal(bar)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[foo]": 3 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(foo)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[foo]": 999999, "[bar]": 3 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bar)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bar]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWIthInit.__init__",
    "sinks": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "caller_interval": [ { "lower": 6, "upper": 7 } ],
            "is_self_call": false,
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 35,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 3 }, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithClassAttributeTaintedDirectly.__init__",
    "sinks": [
      {
        "port": "formal(bad)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[benign]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithClassAttributeTaintedInConstructor.__init__",
    "sinks": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(benign)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[benign]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithOtherSource.__init__",
    "tito": [
      {
        "port": "formal(tainted)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[tainted]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(not_tainted)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[not_tainted]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithSource.__init__",
    "tito": [
      {
        "port": "formal(tainted)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[tainted]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(not_tainted)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[not_tainted]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.WeirdDataClass.__init__",
    "sources": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "kind": "UserControlled"
              }
            ],
            "declaration": null
          }
        ]
      },
      {
        "port": "result[bad]",
        "taint": [
          {
            "caller_interval": [ { "lower": 16, "upper": 17 } ],
            "is_self_call": false,
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "leaves": [
                  {
                    "port": "leaf:bad",
                    "name": "dataclass_taint.WeirdDataClass.__init__"
                  }
                ],
                "kind": "UserControlled"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 50,
              "start": 23,
              "end": 31
            }
          }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "caller_interval": [ { "lower": 16, "upper": 17 } ],
            "is_self_call": false,
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:return",
                    "name": "Obj{dataclass_taint.WeirdDataClass.bad_sink}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 52,
              "start": 8,
              "end": 53
            }
          }
        ]
      },
      {
        "port": "formal(bad_sink)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad_sink]": 3 }, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad_sink)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[bad_sink]": 999999 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 3 }, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "kinds": [
              { "return_paths": { "[bad]": 999999 }, "kind": "LocalReturn" }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.bad_is_tainted",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 18, "start": 28, "end": 42 } ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 18,
              "start": 28,
              "end": 42
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.bad_is_tainted",
    "callable_line": 17,
    "code": 5002,
    "line": 19,
    "start": 15,
    "end": 22,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "always-via": "issue-broadening" }
            ],
            "tito_positions": [ { "line": 18, "start": 28, "end": 42 } ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 18,
              "start": 28,
              "end": 42
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 19,
              "start": 15,
              "end": 22
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "always-via": "issue-broadening" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "dataclass_taint.bad_is_tainted:5002:0:Call|_test_sink|0|formal(arg):a576244e9a2a485090237d4b1205ee6d"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.benign_is_untainted",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "port": "leaf:return", "name": "_test_source" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 24, "start": 28, "end": 42 } ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 24,
              "start": 28,
              "end": 42
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_constructor_tito",
    "tito": [
      {
        "port": "formal(y)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[benign]": 3 },
                "length": 1,
                "kind": "LocalReturn"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 131, "start": 35, "end": 36 } ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[bad]": 3 },
                "length": 1,
                "kind": "LocalReturn"
              }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito_positions": [ { "line": 131, "start": 25, "end": 26 } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_dataclass_parameter_path",
    "sources": [
      {
        "port": "formal(dc)[*]",
        "taint": [
          { "kinds": [ { "kind": "UserControlled" } ], "declaration": null }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(dc)[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 145,
              "start": 15,
              "end": 21
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_dataclass_parameter_path",
    "callable_line": 144,
    "code": 5002,
    "line": 145,
    "start": 15,
    "end": 21,
    "filename": "dataclass_taint.py",
    "message": "Data from [UserControlled] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:dc[*]",
                    "name": "dataclass_taint.test_dataclass_parameter_path"
                  }
                ],
                "kind": "UserControlled"
              }
            ],
            "local_features": [
              { "has": "first-field" }, { "first-field": "bad" }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 144,
              "start": 34,
              "end": 47
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 145,
              "start": 15,
              "end": 21
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "bad" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "dataclass_taint.test_dataclass_parameter_path:5002:0:Call|_test_sink|0|formal(arg):013258f6542b6ba9be26a2a1b967ab37"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_other_source",
    "sinks": [
      {
        "port": "formal(context)[not_tainted]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 85,
              "start": 15,
              "end": 34
            }
          }
        ]
      },
      {
        "port": "formal(context)[tainted]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 84,
              "start": 15,
              "end": 30
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_other_source",
    "callable_line": 83,
    "code": 5002,
    "line": 84,
    "start": 15,
    "end": 30,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:return",
                    "name": "Obj{dataclass_taint.DataClassWithOtherSource.tainted}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 84,
              "start": 15,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 84,
              "start": 15,
              "end": 30
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "dataclass_taint.test_dataclass_with_other_source:5002:0:Call|_test_sink|0|formal(arg):8dc1aba82fdce0b57ee34191013425bb"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_source",
    "sinks": [
      {
        "port": "formal(context)[not_tainted]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 73,
              "start": 15,
              "end": 34
            }
          }
        ]
      },
      {
        "port": "formal(context)[tainted]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 72,
              "start": 15,
              "end": 30
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_source",
    "callable_line": 71,
    "code": 5002,
    "line": 72,
    "start": 15,
    "end": 30,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "port": "leaf:return",
                    "name": "Obj{dataclass_taint.DataClassWithSource.tainted}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 72,
              "start": 15,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "port": "leaf:arg", "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "dataclass_taint.py",
              "line": 72,
              "start": 15,
              "end": 30
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "dataclass_taint.test_dataclass_with_source:5002:0:Call|_test_sink|0|formal(arg):7562e5836e6feb38f926ee37c2912468"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_weird_dataclass_taint",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" }, { "always-type": "scalar" }
                ],
                "length": 1,
                "kind": "UserControlled"
              }
            ],
            "call": {
              "position": {
                "filename": "dataclass_taint.py",
                "line": 56,
                "start": 11,
                "end": 43
              },
              "resolves_to": [ "dataclass_taint.WeirdDataClass.__init__" ],
              "port": "result[bad]"
            }
          }
        ]
      }
    ]
  }
}
