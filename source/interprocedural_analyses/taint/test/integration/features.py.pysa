def _test_sink(arg: TaintSink[Test, Via[special_sink]]): ...
def _test_source() -> TaintSource[Test, Via[special_source]]: ...

def features.len(o: TaintInTaintOut): ...
def features.min(x: TaintInTaintOut, y: TaintInTaintOut): ...
def features.named(*, named_parameter: TaintInTaintOut, **kw): ...
def features.dynamic_feature_tito(x: TaintInTaintOut[ViaDynamicFeature[dynamic_feature]]): ...

def features.always_feature_for_duplicate_models(arg: TaintInTaintOut[Via[string_concat_lhs], Via[string_concat_rhs]]): ...
def features.always_feature_for_duplicate_models(arg: TaintInTaintOut[Via[string_concat_lhs]]): ...
def features.SetItemClass.__setitem__(self, key, value: TaintInTaintOut[LocalReturn, Via[copy]]): ...
