# common global mutators integration tests

def list.append(self: TaintSink[MutationSink]): ...

# global sources
ModelQuery(
  name = "get_all_globals",
  find = "globals",
  where = [
    fully_qualified_name.matches("entrypoint\..*"),
  ],
  model = [
    GlobalModel(TaintSource[GlobalSource]),
  ]
)

@Entrypoint
def entrypoint.get_these(): ...

@Entrypoint
def entrypoint.MyClass.some_entrypoint_function(): ...


ModelQuery(
  name = "get_entrypoint_functions",
  find = "functions",
  where = [
    Decorator(fully_qualified_callee.equals("entrypoint.MyEntrypoint")),
  ],
  model = [
    Modes([Entrypoint])
  ]
)

ModelQuery(
  name = "get_entrypoint_methods",
  find = "methods",
  where = [
    Decorator(fully_qualified_callee.equals("entrypoint.MyEntrypoint")),
  ],
  model = [
    Modes([Entrypoint])
  ]
)
