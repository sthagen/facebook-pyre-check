def _test_sink(arg: TaintSink[Test, Via[special_sink]]): ...
def _test_source() -> TaintSource[Test, Via[special_source]]: ...

# Tainting tuple indices.
def applies_to_index.only_applies_to_first() -> AppliesTo[0, TaintSource[Test]]: ...
def applies_to_index.only_applies_to_second() -> AppliesTo[1, TaintSource[Test]]: ...
def applies_to_index.only_applies_to_nested() -> AppliesTo[0, AppliesTo[1, TaintSource[Test]]]: ...

# Tainting dictionary keys.
def applies_to_index.only_applies_to_a_key() -> AppliesTo["a", TaintSource[Test]]: ...

# Tainting members is uniform with dictionary keys.
def applies_to_index.only_applies_to_a_member() -> AppliesTo["a", TaintSource[Test]]: ...
