def _test_sink(arg: TaintSink[Test, Via[special_sink]]): ...
def _test_source() -> TaintSource[Test, Via[special_source]]: ...

def closure_models.inner_sink_wrapper.inner_sink(x: TaintSink[Test]): ...
def closure_models.outer() -> TaintSource[Test]: ...
def closure_models.test.return_model_taint() -> TaintSource[Test]: ...
def closure_models.reclassify(inner, feature: TaintSource[Test]): ...

def closure_models.Reclassification.reclassify(self: TaintSink[Test, ViaValueOf[feature, WithTag["feature2"]]],*,feature): ...
def closure_models.reclassify(inner, feature) -> TaintSource[Test, ViaValueOf[feature, WithTag["feature1"]]]: ...
