def _test_sink(arg: TaintSink[Test, Via[special_sink]]): ...
def _test_source() -> TaintSource[Test, Via[special_source]]: ...

class_interval.A10.f: TaintSink[RemoteCodeExecution]

def class_interval.sink_b(arg: TaintSink[SinkB]): ...
def class_interval.sink_c(arg: TaintSink[SinkC]): ...
def class_interval.sink_d(arg: TaintSink[SinkD]): ...

def class_interval.transformX(arg: TaintInTaintOut[Transform[TransformX]]): ...
