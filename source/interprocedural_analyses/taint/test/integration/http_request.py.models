@generated
{
  "kind": "issue",
  "data": {
    "callable": "http_request.request_get_flows_to_sink",
    "callable_line": 23,
    "code": 5002,
    "line": 24,
    "start": 15,
    "end": 26,
    "filename": "http_request.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "Obj{django.http.request.HttpRequest.GET}" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 24,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 24,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "http_request.test_trace_has_no_tito",
    "callable_line": 18,
    "code": 5002,
    "line": 20,
    "start": 15,
    "end": 26,
    "filename": "http_request.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "Obj{django.http.request.HttpRequest.GET}" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 20,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 20,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "http_request.test_untainted_assign",
    "callable_line": 13,
    "code": 5002,
    "line": 15,
    "start": 15,
    "end": 26,
    "filename": "http_request.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "Obj{django.http.request.HttpRequest.GET}" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 15,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "http_request.py",
              "line": 15,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{django.http.request.HttpRequest.GET}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ],
    "global_sanitizer": { "sources": "All", "sinks": "All", "tito": "All" }
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{django.http.request.HttpRequest.POST}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ],
    "global_sanitizer": { "sources": "All", "sinks": "All", "tito": "All" }
  }
}
