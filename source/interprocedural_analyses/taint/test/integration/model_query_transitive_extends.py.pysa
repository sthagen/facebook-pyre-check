def _test_sink(arg: TaintSink[Test, Via[special_sink]]): ...
def _test_source() -> TaintSource[Test, Via[special_source]]: ...

ModelQuery(
  name = "get_model_query_transitive_extends_Test1_sources",
  find = "attributes",
  where = [
    parent.matches("Test1_"),
    parent.extends("model_query_transitive_extends.Test1_C", is_transitive=True)
  ],
  model = [
    AttributeModel(TaintSource[Test])
  ]
)

ModelQuery(
  name = "get_model_query_transitive_extends_Test2_sources",
  find = "methods",
  where = [
    parent.matches("Test2_"),
    Not(parent.extends("model_query_transitive_extends.Test2_C", is_transitive=True))
  ],
  model = [
    Parameters(TaintSink[Test], where=[Not(name.equals("self"))])
  ]
)
