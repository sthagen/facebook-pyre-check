@generated
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test1_alarm1",
    "callable_line": 17,
    "code": 5002,
    "line": 20,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "x" },
              { "always-via": "obscure:model" },
              { "always-via-type": "int" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 19, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 19,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 20,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "x" },
      { "always-via": "obscure:model" },
      { "always-via-type": "int" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test1_alarm2",
    "callable_line": 23,
    "code": 5002,
    "line": 26,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "y" },
              { "always-via-type": "str" },
              { "always-via": "obscure:model" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 25, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 25,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 26,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "y" },
      { "always-via-type": "str" },
      { "always-via": "obscure:model" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test1_alarm3",
    "callable_line": 29,
    "code": 5002,
    "line": 32,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "z" },
              { "always-via": "obscure:model" },
              { "always-via-type": "typing.Annotated[str]" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 31, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 31,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 32,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "z" },
      { "always-via": "obscure:model" },
      { "always-via-type": "typing.Annotated[str]" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test1_alarm4",
    "callable_line": 35,
    "code": 5002,
    "line": 43,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "y" },
              { "first-field": "z" },
              { "first-field": "x" },
              { "via-type": "str" },
              { "always-via": "obscure:model" },
              { "via-type": "int" },
              { "via-type": "typing.Annotated[str]" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 37, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 37,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 43,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "y" },
      { "first-field": "z" },
      { "first-field": "x" },
      { "via-type": "str" },
      { "always-via": "obscure:model" },
      { "via-type": "int" },
      { "via-type": "typing.Annotated[str]" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test2_alarm1",
    "callable_line": 52,
    "code": 5002,
    "line": 55,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "x" },
              { "always-via": "obscure:model" },
              { "always-via": "tito" },
              { "always-via-type": "typing.Dict[str, int]" }
            ],
            "tito": [ { "line": 54, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 54,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 55,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "x" },
      { "always-via": "obscure:model" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via-type": "typing.Dict[str, int]" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test2_alarm2",
    "callable_line": 58,
    "code": 5002,
    "line": 61,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "y" },
              { "always-via": "obscure:model" },
              { "always-via": "tito" },
              { "always-via-type": "typing.List[str]" }
            ],
            "tito": [ { "line": 60, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 60,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 61,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "y" },
      { "always-via": "obscure:model" },
      { "always-via": "tito" },
      { "always-via-type": "typing.List[str]" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test2_alarm3",
    "callable_line": 64,
    "code": 5002,
    "line": 67,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "z" },
              { "always-via": "obscure:model" },
              { "always-via-type": "typing.Annotated[float]" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 66, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 66,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 67,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "z" },
      { "always-via": "obscure:model" },
      { "always-via-type": "typing.Annotated[float]" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test2_alarm4",
    "callable_line": 70,
    "code": 5002,
    "line": 78,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-field" },
              { "first-field": "y" },
              { "first-field": "z" },
              { "first-field": "x" },
              { "always-via": "obscure:model" },
              { "via-type": "typing.Annotated[float]" },
              { "always-via": "tito" },
              { "via-type": "typing.List[str]" },
              { "via-type": "typing.Dict[str, int]" }
            ],
            "tito": [ { "line": 72, "start": 16, "end": 30 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 72,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 78,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-field" },
      { "first-field": "y" },
      { "first-field": "z" },
      { "first-field": "x" },
      { "always-via": "obscure:model" },
      { "via-type": "typing.Annotated[float]" },
      { "always-via": "tito" },
      { "via-type": "typing.List[str]" },
      { "always-via": "special_source" },
      { "via-type": "typing.Dict[str, int]" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test4_alarm1",
    "callable_line": 124,
    "code": 5002,
    "line": 126,
    "start": 4,
    "end": 7,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 126,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "unknown" } ],
                "leaves": [ { "name": "Obj{via_type_of.Test4_C.x}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 126,
              "start": 4,
              "end": 7
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "unknown" },
      { "always-via": "special_source" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test4_alarm2",
    "callable_line": 129,
    "code": 5002,
    "line": 131,
    "start": 4,
    "end": 7,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 131,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "typing.Any" } ],
                "leaves": [ { "name": "Obj{via_type_of.Test4_C.y}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 131,
              "start": 4,
              "end": 7
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-type": "typing.Any" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test4_alarm3",
    "callable_line": 134,
    "code": 5002,
    "line": 136,
    "start": 4,
    "end": 7,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 136,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "object" } ],
                "leaves": [ { "name": "Obj{via_type_of.Test4_C.z}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 136,
              "start": 4,
              "end": 7
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-type": "object" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test1_C.x}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test1_C.y}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test1_C.z}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test2_C.x}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test2_C.y}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test2_C.z}",
    "tito": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test3_C.x}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test3_C.y}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test3_C.z}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test4_C.x}",
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test4_C.y}",
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{via_type_of.Test4_C.z}",
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = $global; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.meta",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "typing.Any" } ],
                "leaves": [
                  { "name": "via_type_of.return_via_parameter_type" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 156,
              "start": 11,
              "end": 47
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.return_via_parameter_type",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = parameter; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.sink_via_type_of",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "tag": "TheY",
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = y; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test3_alarm1",
    "sinks": [
      {
        "port": "formal(c)[x]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 93,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test3_alarm1",
    "callable_line": 91,
    "code": 5002,
    "line": 93,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via-type": "typing.Dict[str, typing.List[int]]" }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.x}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 93,
              "start": 15,
              "end": 18
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 93,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Dict[str, typing.List[int]]" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test3_alarm2",
    "sinks": [
      {
        "port": "formal(c)[y]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 98,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test3_alarm2",
    "callable_line": 96,
    "code": 5002,
    "line": 98,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via-type": "via_type_of.Test3_Foo" }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.y}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 98,
              "start": 15,
              "end": 18
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 98,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "via_type_of.Test3_Foo" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test3_alarm3",
    "sinks": [
      {
        "port": "formal(c)[z]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 103,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test3_alarm3",
    "callable_line": 101,
    "code": 5002,
    "line": 103,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  {
                    "always-via-type":
                      "typing.Annotated[typing.List[typing.List[str]]]"
                  }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.z}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 103,
              "start": 15,
              "end": 18
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 103,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      {
        "always-via-type": "typing.Annotated[typing.List[typing.List[str]]]"
      },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test3_alarm4",
    "sinks": [
      {
        "port": "formal(c)[x]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 115,
              "start": 15,
              "end": 18
            }
          }
        ]
      },
      {
        "port": "formal(c)[y]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 115,
              "start": 15,
              "end": 18
            }
          }
        ]
      },
      {
        "port": "formal(c)[z]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 115,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "via_type_of.test3_alarm4",
    "callable_line": 106,
    "code": 5002,
    "line": 115,
    "start": 15,
    "end": 18,
    "filename": "via_type_of.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via-type": "typing.Dict[str, typing.List[int]]" }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.x}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 110,
              "start": 10,
              "end": 13
            }
          },
          {
            "kinds": [
              {
                "features": [
                  { "always-via-type": "via_type_of.Test3_Foo" }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.y}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 112,
              "start": 14,
              "end": 17
            }
          },
          {
            "kinds": [
              {
                "features": [
                  {
                    "always-via-type":
                      "typing.Annotated[typing.List[typing.List[str]]]"
                  }
                ],
                "leaves": [ { "name": "Obj{via_type_of.Test3_C.z}" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 114,
              "start": 14,
              "end": 17
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 115,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "via-type": "via_type_of.Test3_Foo" },
      { "via-type": "typing.Annotated[typing.List[typing.List[str]]]" },
      { "via-type": "typing.Dict[str, typing.List[int]]" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_backwards_tito",
    "tito": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-via-type": "str" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 181, "start": 16, "end": 25 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_lists",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "typing.List[str]" } ],
                "leaves": [
                  { "name": "via_type_of.return_via_parameter_type" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 152,
              "start": 11,
              "end": 48
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_numerals",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "int" } ],
                "leaves": [
                  { "name": "via_type_of.return_via_parameter_type" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 148,
              "start": 11,
              "end": 39
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_sink",
    "sinks": [
      {
        "port": "formal(element)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-TheY-type": "int" } ],
                "leaves": [ { "name": "via_type_of.sink_via_type_of" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 177,
              "start": 28,
              "end": 35
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_strings",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "str" } ],
                "leaves": [
                  { "name": "via_type_of.return_via_parameter_type" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "via_type_of.py",
              "line": 144,
              "start": 11,
              "end": 41
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_tito",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via": "tito" },
              { "always-via-type": "typing.List[int]" }
            ],
            "tito": [ { "line": 168, "start": 13, "end": 27 } ],
            "root": {
              "filename": "via_type_of.py",
              "line": 168,
              "start": 13,
              "end": 27
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.test_via_type_of_does_not_propagate",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via-type": "typing.Any" } ],
                "leaves": [
                  { "name": "via_type_of.return_via_parameter_type" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "via_type_of.py",
                "line": 160,
                "start": 11,
                "end": 23
              },
              "resolves_to": [ "via_type_of.meta" ],
              "port": "result"
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "via_type_of.tito",
    "tito": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = other; positional_only = false}"
                  }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
