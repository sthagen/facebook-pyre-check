@generated
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source",
    "callable_line": 157,
    "code": 5002,
    "line": 165,
    "start": 15,
    "end": 31,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 165,
              "start": 15,
              "end": 31
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_both_generation_parameter_source:5002:0:Call|_test_sink|0|formal(arg):06c974bdf5e63d11e9f5cb9afa0717be"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_generation_source",
    "callable_line": 145,
    "code": 5002,
    "line": 154,
    "start": 15,
    "end": 31,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 154,
              "start": 15,
              "end": 31
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_generation_source:5002:0:Call|_test_sink|0|formal(arg):f44d60bcd0c8096f399c8948f1253f37"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_sink",
    "callable_line": 168,
    "code": 5002,
    "line": 175,
    "start": 4,
    "end": 33,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 169,
              "start": 23,
              "end": 37
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
                    "port": "leaf:$local_closure_models?captured_variable_model_sink$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 175,
              "start": 4,
              "end": 33
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
      "index": 0,
      "parameter": "captured_variable($local_closure_models?captured_variable_model_sink$complicated_name)"
    },
    "master_handle": "closure_models.captured_variable_model_sink:5002:0:Call|closure_models.captured_variable_model_sink.model_all_captured_as_sinks|0|captured_variable($local_closure_models?captured_variable_model_sink$complicated_name):0a55479d32e7dd6737f7733fd35dc458"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_tito",
    "callable_line": 122,
    "code": 5002,
    "line": 129,
    "start": 15,
    "end": 43,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 129, "start": 15, "end": 43 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 123,
              "start": 23,
              "end": 37
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 129,
              "start": 15,
              "end": 43
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_tito:5002:0:Call|_test_sink|0|formal(arg):6dfda8c196e18ac377d85df77b71b9b8"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.inner_sink_wrapper",
    "callable_line": 9,
    "code": 5002,
    "line": 13,
    "start": 15,
    "end": 29,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 13,
              "start": 15,
              "end": 29
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.inner_sink_wrapper.inner_sink",
                    "port": "leaf:x"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 13,
              "start": 15,
              "end": 29
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.inner_sink_wrapper.inner_sink",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "closure_models.inner_sink_wrapper:5002:0:Call|closure_models.inner_sink_wrapper.inner_sink|0|formal(x):beabfe36d7897c6c0f395cc67b2fd9cf"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test",
    "callable_line": 38,
    "code": 5002,
    "line": 83,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 80, "start": 14, "end": 37 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 47,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 83,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 4,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test:5002:0:Call|closure_models.Reclassification.reclassify|4|formal(self):9e385e5ace0f8fb33cf488693dbae210"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test",
    "callable_line": 38,
    "code": 5002,
    "line": 77,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 74, "start": 14, "end": 37 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 47,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 77,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 3,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test:5002:0:Call|closure_models.Reclassification.reclassify|3|formal(self):02ec2d87642bc9b886fb25ca643d42f9"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test",
    "callable_line": 38,
    "code": 5002,
    "line": 71,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "closure_models.outer", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 68, "start": 14, "end": 19 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 68,
              "start": 14,
              "end": 19
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 71,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 2,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test:5002:0:Call|closure_models.Reclassification.reclassify|2|formal(self):4f3a5add1af3ef40aef8627c7514f15a"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test",
    "callable_line": 38,
    "code": 5002,
    "line": 65,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.test.return_model_taint",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 62, "start": 14, "end": 32 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 62,
              "start": 14,
              "end": 32
            }
          },
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" },
              { "always-via": "captured-variable" }
            ],
            "tito_positions": [
              { "line": 55, "start": 14, "end": 26 },
              { "line": 62, "start": 14, "end": 32 }
            ],
            "call": {
              "position": {
                "filename": "closure_models.py",
                "line": 55,
                "start": 14,
                "end": 26
              },
              "resolves_to": [ "closure_models.test.return_taint" ],
              "port": "result"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 65,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" },
      { "via": "captured-variable" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 1,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test:5002:0:Call|closure_models.Reclassification.reclassify|1|formal(self):02424705405e33044d3df4033d03c2f4"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test",
    "callable_line": 38,
    "code": 5002,
    "line": 59,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 55, "start": 14, "end": 26 } ],
            "call": {
              "position": {
                "filename": "closure_models.py",
                "line": 55,
                "start": 14,
                "end": 26
              },
              "resolves_to": [ "closure_models.test.return_taint" ],
              "port": "result"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 59,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 0,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test:5002:0:Call|closure_models.Reclassification.reclassify|0|formal(self):76d7796467b6a67406119dc08e839040"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_tito_transform",
    "callable_line": 86,
    "code": 5003,
    "line": 104,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [
                  { "always-via": "transform-tito-depth:1" }
                ],
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "ReclassificationFakeTITO@Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 101, "start": 14, "end": 37 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 87,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 104,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "transform-tito-depth:1" },
      { "always-via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 1,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test_tito_transform:5003:0:Call|closure_models.Reclassification.reclassify|1|formal(self):308866c2d1a82bac54dfa745bbc59889"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_tito_transform",
    "callable_line": 86,
    "code": 5003,
    "line": 98,
    "start": 4,
    "end": 9,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [
                  { "always-via": "transform-tito-depth:1" }
                ],
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "ReclassificationFakeTITO@Test"
              }
            ],
            "local_features": [
              { "always-via-feature1-value": "breadcrumb1" },
              { "always-via": "tito" },
              { "always-via": "lambda" }
            ],
            "tito_positions": [ { "line": 95, "start": 14, "end": 37 } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 87,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.Reclassification.reclassify",
                    "port": "leaf:self"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-feature2-value": "breadcrumb2" }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 98,
              "start": 4,
              "end": 9
            },
            "receiver_interval": [ { "lower": 2, "upper": 3 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "transform-tito-depth:1" },
      { "always-via": "special_source" },
      { "always-via-feature1-value": "breadcrumb1" },
      { "always-via-feature2-value": "breadcrumb2" },
      { "always-via": "tito" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.Reclassification.reclassify",
      "index": 0,
      "parameter": "formal(self)"
    },
    "master_handle": "closure_models.test_tito_transform:5003:0:Call|closure_models.Reclassification.reclassify|0|formal(self):0c879c67e21f72dde5558f1a463d51c1"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 614,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 615,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.Reclassification.__init__",
    "filename": "closure_models.py",
    "callable_line": 17,
    "tito": [
      {
        "port": "formal(feature, position=2)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[feature]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(inner, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[inner]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.Reclassification.reclassify",
    "filename": "closure_models.py",
    "callable_line": 21,
    "sinks": [
      {
        "port": "formal(self, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature2"
                  }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(self, position=0)[inner]",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "local_features": [ { "always-via": "obscure:unknown-callee" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
    "filename": "closure_models.py",
    "callable_line": 161,
    "sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 162,
              "start": 19,
              "end": 35
            }
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
    "callable_line": 161,
    "code": 5002,
    "line": 162,
    "start": 19,
    "end": 35,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
                    "port": "leaf:$local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 161,
              "start": 4,
              "end": 4
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 162,
              "start": 19,
              "end": 35
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources:5002:0:Call|_test_sink|0|formal(arg):d2b04b745ef41e69315f6f8fe7e57750"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_generation_source.model_all_captured_as_generation_sources",
    "filename": "closure_models.py",
    "callable_line": 149,
    "sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_generation_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_generation_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 151,
              "start": 19,
              "end": 35
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
    "filename": "closure_models.py",
    "callable_line": 138,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_parameter_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 139,
              "start": 19,
              "end": 35
            }
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
    "callable_line": 138,
    "code": 5002,
    "line": 139,
    "start": 19,
    "end": 35,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
                    "port": "leaf:$local_closure_models?captured_variable_model_parameter_source$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 138,
              "start": 4,
              "end": 4
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 139,
              "start": 19,
              "end": 35
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources:5002:0:Call|_test_sink|0|formal(arg):97a7f2efbf033e21471fcdb353625226"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
    "filename": "closure_models.py",
    "callable_line": 172,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_sink$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_tito.model_all_captured_as_tito",
    "filename": "closure_models.py",
    "callable_line": 126,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_tito$complicated_name)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.inner_sink_wrapper.inner_sink",
    "filename": "closure_models.py",
    "callable_line": 10,
    "sinks": [
      {
        "port": "formal(x, position=0)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "formal(x, position=0)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.outer",
    "filename": "closure_models.py",
    "callable_line": 30,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_query_tito",
    "filename": "closure_models.py",
    "callable_line": 51,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$source)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_taint",
    "filename": "closure_models.py",
    "callable_line": 44,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$value)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_taint_tito",
    "filename": "closure_models.py",
    "callable_line": 48,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$source)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_taint",
    "filename": "closure_models.py",
    "callable_line": 41,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 42,
              "start": 15,
              "end": 29
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
    "filename": "closure_models.py",
    "callable_line": 118,
    "sinks": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 119,
              "start": 19,
              "end": 28
            }
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
    "callable_line": 118,
    "code": 5002,
    "line": 119,
    "start": 19,
    "end": 28,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
                    "port": "leaf:$parameter$some_data"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 118,
              "start": 4,
              "end": 4
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 119,
              "start": 19,
              "end": 28
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable:5002:0:Call|_test_sink|0|formal(arg):bc83c42fb3522f1666af9a49b7af98f7"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_dsl_source.local_function_capturing_local_variable",
    "filename": "closure_models.py",
    "callable_line": 112,
    "sinks": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": {
              "filename": "closure_models.py",
              "line": 113,
              "start": 19,
              "end": 28
            }
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_dsl_source.local_function_capturing_local_variable",
    "callable_line": 112,
    "code": 5002,
    "line": 113,
    "start": 19,
    "end": 28,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.test_dsl_source.local_function_capturing_local_variable",
                    "port": "leaf:$parameter$some_data"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 112,
              "start": 4,
              "end": 4
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure_models.py",
              "line": 113,
              "start": 19,
              "end": 28
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.test_dsl_source.local_function_capturing_local_variable:5002:0:Call|_test_sink|0|formal(arg):957a7606ec7aa86b5573f5613e6f214b"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_tito_transform.return_model_query_tito",
    "filename": "closure_models.py",
    "callable_line": 91,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              { "kind": "ReclassificationFakeTITO@ExtraTraceSink" }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "": 0 },
                "kind": "ReclassificationFakeTITO@LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_tito_transform.return_model_taint_tito",
    "filename": "closure_models.py",
    "callable_line": 88,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              { "kind": "ReclassificationFakeTITO@ExtraTraceSink" }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "": 0 },
                "kind": "ReclassificationFakeTITO@LocalReturn"
              }
            ],
            "tito": null
          }
        ]
      }
    ]
  }
}
