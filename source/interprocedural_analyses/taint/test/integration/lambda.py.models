@generated
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 51,
    "start": 15,
    "end": 31,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 49, "start": 20, "end": 82 },
              { "line": 49, "start": 45, "end": 81 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 49,
              "start": 52,
              "end": 66
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 51,
              "start": 15,
              "end": 31
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 6,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|6|formal(arg):ee6445b67588fffd93d6a38572dd6e4a"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 50,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "always-via": "issue-broadening" }
            ],
            "tito_positions": [
              { "line": 49, "start": 20, "end": 82 },
              { "line": 49, "start": 45, "end": 81 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 49,
              "start": 52,
              "end": 66
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 50,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "always-via": "issue-broadening" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 5,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|5|formal(arg):cb2c0fa055d1e851d608f0f3e515e648"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 47,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 44, "start": 20, "end": 68 },
              { "line": 44, "start": 45, "end": 67 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 44,
              "start": 49,
              "end": 63
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 47,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 4,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|4|formal(arg):7221fdbf14dd13450b87e3db33035a17"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 46,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 44, "start": 20, "end": 68 },
              { "line": 44, "start": 45, "end": 67 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 44,
              "start": 49,
              "end": 63
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 46,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 3,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|3|formal(arg):bbefd63d94e7c08862ab2238b8674d33"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 45,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 44, "start": 20, "end": 68 },
              { "line": 44, "start": 45, "end": 67 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 44,
              "start": 49,
              "end": 63
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 45,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 2,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|2|formal(arg):9d20eab1b0e719b0cf8c3bbd8027e428"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 42,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 40, "start": 20, "end": 62 },
              { "line": 40, "start": 45, "end": 61 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 40,
              "start": 46,
              "end": 60
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 42,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 1,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|1|formal(arg):f53277ec8627abf057db47fa005ef18b"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_filter_lambda",
    "callable_line": 39,
    "code": 5002,
    "line": 41,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "tito" }
            ],
            "tito_positions": [
              { "line": 40, "start": 20, "end": 62 },
              { "line": 40, "start": 45, "end": 61 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 40,
              "start": 46,
              "end": 60
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 41,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_filter_lambda:5002:0:Call|_test_sink|0|formal(arg):5e4921bb8cf913e35ce7ddf776aaf4aa"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 33,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 32, "start": 20, "end": 59 },
              { "line": 32, "start": 24, "end": 48 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 32,
              "start": 34,
              "end": 48
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 33,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 10,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|10|formal(arg):90cc567fa1e4bb65d4c5534c3083dc7e"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 30,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 29, "start": 20, "end": 79 },
              { "line": 29, "start": 24, "end": 40 },
              { "line": 29, "start": 42, "end": 78 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 29,
              "start": 49,
              "end": 63
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 30,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 9,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|9|formal(arg):e0cb3cb64a9697c82736135aa5b88c62"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 27,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 26, "start": 20, "end": 79 },
              { "line": 26, "start": 24, "end": 40 },
              { "line": 26, "start": 42, "end": 78 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 26,
              "start": 49,
              "end": 63
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 27,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 8,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|8|formal(arg):b2327cff7ce35468341795d73d2c2478"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 24,
    "start": 15,
    "end": 31,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 21, "start": 20, "end": 74 },
              { "line": 21, "start": 24, "end": 55 },
              { "line": 21, "start": 57, "end": 73 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 21,
              "start": 58,
              "end": 72
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 24,
              "start": 15,
              "end": 31
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 7,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|7|formal(arg):1f138bbc4402d9ea9c2ebccad492996a"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 23,
    "start": 15,
    "end": 31,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 21, "start": 20, "end": 74 },
              { "line": 21, "start": 24, "end": 55 },
              { "line": 21, "start": 57, "end": 73 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 21,
              "start": 58,
              "end": 72
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 23,
              "start": 15,
              "end": 31
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 6,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|6|formal(arg):3569b363ad876dffc337f38fdf3f7d59"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 22,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 21, "start": 20, "end": 74 },
              { "line": 21, "start": 24, "end": 55 },
              { "line": 21, "start": 57, "end": 73 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 21,
              "start": 58,
              "end": 72
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 22,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 5,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|5|formal(arg):6ebcbaa75658689a3b33d1e59a815091"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 19,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 16, "start": 20, "end": 60 },
              { "line": 16, "start": 24, "end": 35 },
              { "line": 16, "start": 37, "end": 59 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 16,
              "start": 41,
              "end": 55
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 19,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 4,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|4|formal(arg):0480206225d43db02d615fc5f7709a70"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 18,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 16, "start": 20, "end": 60 },
              { "line": 16, "start": 24, "end": 35 },
              { "line": 16, "start": 37, "end": 59 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 16,
              "start": 41,
              "end": 55
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 18,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 3,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|3|formal(arg):add6844872f3ba073153a94d1a62198b"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 17,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 16, "start": 20, "end": 60 },
              { "line": 16, "start": 24, "end": 35 },
              { "line": 16, "start": 37, "end": 59 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 16,
              "start": 41,
              "end": 55
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 17,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 2,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|2|formal(arg):4c2fc89b07288b50bac57800700dce05"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 14,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 12, "start": 20, "end": 54 },
              { "line": 12, "start": 24, "end": 35 },
              { "line": 12, "start": 37, "end": 53 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 12,
              "start": 38,
              "end": 52
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 14,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 1,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|1|formal(arg):8c9e52644ee8eab6629d91c3de3c4eee"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "lambda.test_map_lambda",
    "callable_line": 11,
    "code": 5002,
    "line": 13,
    "start": 15,
    "end": 26,
    "filename": "lambda.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "obscure:model" },
              { "always-via": "tito-broadening" },
              { "always-via": "tito" },
              { "always-via": "broadening" },
              { "via": "obscure:unknown-callee" },
              { "via": "lambda" }
            ],
            "tito_positions": [
              { "line": 12, "start": 20, "end": 54 },
              { "line": 12, "start": 24, "end": 35 },
              { "line": 12, "start": 37, "end": 53 }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 12,
              "start": 38,
              "end": 52
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "lambda.py",
              "line": 13,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "obscure:model" },
      { "always-via": "tito-broadening" },
      { "always-via": "tito" },
      { "always-via": "broadening" },
      { "via": "obscure:unknown-callee" },
      { "via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "lambda.test_map_lambda:5002:0:Call|_test_sink|0|formal(arg):6cb16f947915a816343fa08903300b41"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 614,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 615,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "filter.__init__",
    "tito": [
      {
        "port": "formal(__iterable, position=2)[*]",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[*]": 999999 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(__iterable, position=2).**keys",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[*]": 999999 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      }
    ],
    "modes": [ "SkipObscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "list.__init__",
    "tito": [
      {
        "port": "formal(__iterable, position=1)[*]",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[*]": 999999 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      },
      {
        "port": "formal(__iterable, position=1).**keys",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[*]": 999999 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": null
          }
        ]
      }
    ],
    "modes": [ "SkipObscure" ]
  }
}
