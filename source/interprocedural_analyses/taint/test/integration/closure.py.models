@generated
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_conditional_write",
    "callable_line": 239,
    "code": 5003,
    "line": 252,
    "start": 15,
    "end": 18,
    "filename": "closure.py",
    "message": "Data from [Test2] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "closure._test_source2", "port": "leaf:return" }
                ],
                "kind": "Test2"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 245,
              "start": 18,
              "end": 33
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 252,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_conditional_write:5003:0:Call|_test_sink|0|formal(arg):9e6e82bfaef3ca1a89fb038a40978c11"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_conditional_write",
    "callable_line": 239,
    "code": 5002,
    "line": 258,
    "start": 15,
    "end": 18,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 255,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 258,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-type": "integer" },
      { "always-type": "scalar" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 1,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_conditional_write:5002:0:Call|_test_sink|1|formal(arg):eb4fe29bbe6a4a5e26f8fb4155151d61"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_conditional_write",
    "callable_line": 239,
    "code": 5002,
    "line": 252,
    "start": 15,
    "end": 18,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 240,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 252,
              "start": 15,
              "end": 18
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_conditional_write:5002:0:Call|_test_sink|0|formal(arg):4f82690eddf07742f67b381e40a2c38a"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_flow",
    "callable_line": 170,
    "code": 5002,
    "line": 181,
    "start": 4,
    "end": 10,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 175,
              "start": 14,
              "end": 28
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 181,
                "start": 4,
                "end": 10
              },
              "resolves_to": [ "closure.nonlocal_closure_flow.sink" ],
              "port": "captured_variable($local_closure?nonlocal_closure_flow$obj)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_flow.sink",
      "index": 0,
      "parameter": "captured_variable($local_closure?nonlocal_closure_flow$obj)"
    },
    "master_handle": "closure.nonlocal_closure_flow:5002:0:Call|closure.nonlocal_closure_flow.sink|0|captured_variable($local_closure?nonlocal_closure_flow$obj):28496caf7a15fcabcc05d7ee3cbcbed3"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_multiple_reads",
    "callable_line": 68,
    "code": 5002,
    "line": 76,
    "start": 4,
    "end": 22,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 69,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 76,
                "start": 4,
                "end": 22
              },
              "resolves_to": [
                "closure.nonlocal_closure_multiple_reads.conditional_read"
              ],
              "port": "captured_variable($local_closure?nonlocal_closure_multiple_reads$x)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_multiple_reads.conditional_read",
      "index": 0,
      "parameter": "captured_variable($local_closure?nonlocal_closure_multiple_reads$x)"
    },
    "master_handle": "closure.nonlocal_closure_multiple_reads:5002:0:Call|closure.nonlocal_closure_multiple_reads.conditional_read|0|captured_variable($local_closure?nonlocal_closure_multiple_reads$x):30b97989d39e6a177ea73d80e8e2878b"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_multiple_writes",
    "callable_line": 148,
    "code": 5002,
    "line": 159,
    "start": 15,
    "end": 16,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 154,
              "start": 16,
              "end": 30
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 159,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-type": "integer" },
      { "always-type": "scalar" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_multiple_writes:5002:0:Call|_test_sink|0|formal(arg):07350f842de833ee24f47c6d4d6f4157"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_read_reduction",
    "callable_line": 9,
    "code": 5002,
    "line": 16,
    "start": 4,
    "end": 12,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 10,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 16,
                "start": 4,
                "end": 12
              },
              "resolves_to": [
                "closure.nonlocal_closure_read_reduction.inner"
              ],
              "port": "captured_variable($local_closure?nonlocal_closure_read_reduction$x)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_read_reduction.inner",
      "index": 0,
      "parameter": "captured_variable($local_closure?nonlocal_closure_read_reduction$x)"
    },
    "master_handle": "closure.nonlocal_closure_read_reduction:5002:0:Call|closure.nonlocal_closure_read_reduction.inner|0|captured_variable($local_closure?nonlocal_closure_read_reduction$x):6d838ba571c9b2b860f255ac30a07852"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_read_reduction",
    "callable_line": 9,
    "code": 5002,
    "line": 16,
    "start": 10,
    "end": 11,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 11,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 16,
                "start": 10,
                "end": 11
              },
              "resolves_to": [
                "closure.nonlocal_closure_read_reduction.inner"
              ],
              "port": "formal(z)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_read_reduction.inner",
      "index": 0,
      "parameter": "formal(z)"
    },
    "master_handle": "closure.nonlocal_closure_read_reduction:5002:0:Call|closure.nonlocal_closure_read_reduction.inner|0|formal(z):6cb6fe9e9a0bfb5ecf1a291816f7f7cc"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_reduction",
    "callable_line": 131,
    "code": 5002,
    "line": 145,
    "start": 4,
    "end": 14,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 136,
              "start": 15,
              "end": 29
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 145,
                "start": 4,
                "end": 14
              },
              "resolves_to": [ "closure.nonlocal_closure_reduction.sink" ],
              "port": "captured_variable($local_closure?nonlocal_closure_reduction$obj1)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_reduction.sink",
      "index": 0,
      "parameter": "captured_variable($local_closure?nonlocal_closure_reduction$obj1)"
    },
    "master_handle": "closure.nonlocal_closure_reduction:5002:0:Call|closure.nonlocal_closure_reduction.sink|0|captured_variable($local_closure?nonlocal_closure_reduction$obj1):9bb0fef7fa52f817b626ac50ac356379"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_reduction",
    "callable_line": 131,
    "code": 5002,
    "line": 145,
    "start": 9,
    "end": 13,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 144,
                "start": 11,
                "end": 19
              },
              "resolves_to": [ "closure.nonlocal_closure_reduction.source" ],
              "port": "result"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 145,
                "start": 9,
                "end": 13
              },
              "resolves_to": [ "closure.nonlocal_closure_reduction.sink" ],
              "port": "formal(obj2)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.nonlocal_closure_reduction.sink",
      "index": 0,
      "parameter": "formal(obj2)"
    },
    "master_handle": "closure.nonlocal_closure_reduction:5002:0:Call|closure.nonlocal_closure_reduction.sink|0|formal(obj2):40c7eab5df7801acbedbf94abf4180f2"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_write_reduction",
    "callable_line": 117,
    "code": 5002,
    "line": 128,
    "start": 15,
    "end": 16,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 126,
                "start": 8,
                "end": 16
              },
              "resolves_to": [
                "closure.nonlocal_closure_write_reduction.source"
              ],
              "port": "result"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 128,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 1,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_write_reduction:5002:0:Call|_test_sink|1|formal(arg):425241f92bf37e36e230d9e5afb823e1"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_write_reduction",
    "callable_line": 117,
    "code": 5002,
    "line": 127,
    "start": 15,
    "end": 16,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 123,
              "start": 12,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 127,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_write_reduction:5002:0:Call|_test_sink|0|formal(arg):e5dd31a02c5ede2685b8c68c7fbf038b"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.taint_propagation",
    "callable_line": 19,
    "code": 5002,
    "line": 22,
    "start": 37,
    "end": 38,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 21,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 22,
                "start": 37,
                "end": 38
              },
              "resolves_to": [ "closure.wrapper_for_taint_propagation" ],
              "port": "formal(z)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.wrapper_for_taint_propagation",
      "index": 0,
      "parameter": "formal(z)"
    },
    "master_handle": "closure.taint_propagation:5002:0:Call|closure.wrapper_for_taint_propagation|0|formal(z):d878608229c113dfeaba3b976a3db5d3"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.taint_propagation",
    "callable_line": 19,
    "code": 5002,
    "line": 22,
    "start": 34,
    "end": 35,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 20,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 22,
                "start": 34,
                "end": 35
              },
              "resolves_to": [ "closure.wrapper_for_taint_propagation" ],
              "port": "formal(x)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.wrapper_for_taint_propagation",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "closure.taint_propagation:5002:0:Call|closure.wrapper_for_taint_propagation|0|formal(x):37d12eccf218ca05f3b929330fc4b1f7"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.taint_propagation_hof",
    "callable_line": 32,
    "code": 5002,
    "line": 35,
    "start": 41,
    "end": 42,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 34,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-via": "special_sink" },
                  { "always-via": "lambda" }
                ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 35,
                "start": 41,
                "end": 42
              },
              "resolves_to": [ "closure.wrapper_for_taint_propagation_hof" ],
              "port": "formal(z)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "lambda" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.wrapper_for_taint_propagation_hof",
      "index": 0,
      "parameter": "formal(z)"
    },
    "master_handle": "closure.taint_propagation_hof:5002:0:Call|closure.wrapper_for_taint_propagation_hof|0|formal(z):eac53eed0b45978a97e003f1e9fb5a30"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.taint_propagation_hof",
    "callable_line": 32,
    "code": 5002,
    "line": 35,
    "start": 38,
    "end": 39,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 33,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 2,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 35,
                "start": 38,
                "end": 39
              },
              "resolves_to": [ "closure.wrapper_for_taint_propagation_hof" ],
              "port": "formal(x)"
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure.wrapper_for_taint_propagation_hof",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "closure.taint_propagation_hof:5002:0:Call|closure.wrapper_for_taint_propagation_hof|0|formal(x):954ed00d9a632d6ac7dbe83d70048d86"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "sinks": [
      {
        "port": "formal(arg)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure._test_source2",
    "sources": [
      {
        "port": "result",
        "taint": [
          { "kinds": [ { "kind": "Test2" } ], "declaration": null }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.closure.sink",
    "sinks": [
      {
        "port": "captured_variable($local_closure?closure$obj)[x]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 99,
              "start": 19,
              "end": 24
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_conditional_write.conditional_write",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_conditional_write$obj)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "closure._test_source2", "port": "leaf:return" }
                ],
                "kind": "Test2"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 245,
              "start": 18,
              "end": 33
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_flow.sink",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_flow$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 178,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_flow.source",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_flow$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 175,
              "start": 14,
              "end": 28
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_inner_flow.flow",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_inner_flow$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 203,
              "start": 14,
              "end": 28
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure.nonlocal_closure_inner_flow.flow",
    "callable_line": 201,
    "code": 5002,
    "line": 204,
    "start": 19,
    "end": 22,
    "filename": "closure.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 203,
              "start": 14,
              "end": 28
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 204,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure.nonlocal_closure_inner_flow.flow:5002:0:Call|_test_sink|0|formal(arg):501594a8068495c8675fca671d89cec3"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_multiple_reads.conditional_read",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_multiple_reads$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 73,
              "start": 23,
              "end": 24
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_multiple_writes.conditional_write",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_multiple_writes$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 154,
              "start": 16,
              "end": 30
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_no_flow.sink",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_no_flow$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 192,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_no_flow.source",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_no_flow$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 189,
              "start": 14,
              "end": 28
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_obscure.sink",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_obscure$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 217,
              "start": 19,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_obscure.source",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_obscure$obj)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 214,
              "start": 14,
              "end": 28
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_read_reduction.inner",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_read_reduction$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 14,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 15,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_reduction.sink",
    "sinks": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_reduction$obj1)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 141,
              "start": 19,
              "end": 23
            }
          }
        ]
      },
      {
        "port": "formal(obj2)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 142,
              "start": 19,
              "end": 23
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_reduction.source",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_reduction$obj1)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 136,
              "start": 15,
              "end": 29
            }
          }
        ]
      },
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 137,
              "start": 15,
              "end": 29
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.nonlocal_closure_write_reduction.source",
    "sources": [
      {
        "port": "captured_variable($local_closure?nonlocal_closure_write_reduction$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 123,
              "start": 12,
              "end": 26
            }
          }
        ]
      },
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 124,
              "start": 15,
              "end": 29
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.parameter_order_swap",
    "sinks": [
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 55,
                "start": 4,
                "end": 11
              },
              "resolves_to": [ "closure.parameter_order_swap.inner" ],
              "port": "captured_variable($parameter$z)"
            }
          }
        ]
      },
      {
        "port": "formal(y)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 55,
                "start": 4,
                "end": 11
              },
              "resolves_to": [ "closure.parameter_order_swap.inner" ],
              "port": "captured_variable($parameter$y)"
            }
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 55,
                "start": 4,
                "end": 11
              },
              "resolves_to": [ "closure.parameter_order_swap.inner" ],
              "port": "captured_variable($parameter$x)"
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.parameter_order_swap.inner",
    "sinks": [
      {
        "port": "captured_variable($parameter$z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 54,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "captured_variable($parameter$y)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 52,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "captured_variable($parameter$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 53,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.parameter_order_swap_different_variable_names",
    "sinks": [
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 65,
                "start": 4,
                "end": 11
              },
              "resolves_to": [
                "closure.parameter_order_swap_different_variable_names.inner"
              ],
              "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$c)"
            }
          }
        ]
      },
      {
        "port": "formal(y)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 65,
                "start": 4,
                "end": 11
              },
              "resolves_to": [
                "closure.parameter_order_swap_different_variable_names.inner"
              ],
              "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$b)"
            }
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 65,
                "start": 4,
                "end": 11
              },
              "resolves_to": [
                "closure.parameter_order_swap_different_variable_names.inner"
              ],
              "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$a)"
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.parameter_order_swap_different_variable_names.inner",
    "sinks": [
      {
        "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$c)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 64,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$b)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 62,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "captured_variable($local_closure?parameter_order_swap_different_variable_names$a)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 63,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.wrapper_for_taint_propagation",
    "sinks": [
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 29,
                "start": 10,
                "end": 11
              },
              "resolves_to": [
                "closure.wrapper_for_taint_propagation.inner"
              ],
              "port": "formal(z)"
            }
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 29,
                "start": 4,
                "end": 12
              },
              "resolves_to": [
                "closure.wrapper_for_taint_propagation.inner"
              ],
              "port": "captured_variable($parameter$x)"
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.wrapper_for_taint_propagation.inner",
    "sinks": [
      {
        "port": "captured_variable($parameter$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 27,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 28,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.wrapper_for_taint_propagation_hof",
    "sinks": [
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "lambda" } ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 43,
                "start": 26,
                "end": 31
              },
              "resolves_to": [
                "closure.wrapper_for_taint_propagation_hof.inner"
              ],
              "port": "formal(z)"
            }
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "closure.py",
                "line": 43,
                "start": 26,
                "end": 31
              },
              "resolves_to": [
                "closure.wrapper_for_taint_propagation_hof.inner"
              ],
              "port": "captured_variable($parameter$x)"
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure.wrapper_for_taint_propagation_hof.inner",
    "sinks": [
      {
        "port": "captured_variable($parameter$x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 40,
              "start": 19,
              "end": 20
            }
          }
        ]
      },
      {
        "port": "formal(z)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": {
              "filename": "closure.py",
              "line": 41,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ]
  }
}
